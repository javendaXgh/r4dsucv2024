{
  "hash": "1701eeada0e87451fde8011e26182bc0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Clase Virtual 1: Configurando Git y GitHub\"\nformat: revealjs\n---\n\n\n\n## Or√≠genes Presentaci√≥n\n\nEstas l√°minas est√°n basadas en el contenido desarrollado por la Prof¬™. [Jennifer Bryan](https://github.com/jennybc/happy-git-with-r) en el libro electr√≥nico [**Happy Git and GitHub for the useR**](https://happygitwithr.com/) , as√≠ como en el taller .. desarrollado por la prof¬™ [**Mine √áetinkaya-Rundel**](http://mine-cr.com/),¬†.Teaching computing with Git and GitHub disponible en el link <https://mine-cetinkaya-rundel.github.io/teach-r-online/03-git/03-git.html#1>\n\n::: notes\nVerificar que han instalado paquetes\n:::\n\n## Objetivos\n\n1.  Instar Git\n2.  Sincronizar cuenta GitHub con RStudio\n3.  Clonar y sincronizar un repositorio\n\n## Qu√© es Git\n\nUn sistema de control de versiones donde quedan registrados los cambios que se van haciendo a un archivo, que junto con otros archivos, conforman lo que se denomina un repositorio.\n\nPor ejemplo, el repositorio <https://github.com/javendaXgh/r4dsucv2024> contiene todos los archivos de extensiones html, css, js, qmd, R, as√≠ como las carpetas que dan sustento al site del curso <https://ucveconomiar4ds.netlify.app>\n\n::: notes\nprop√≥sito original, dar soporte a grupos de desarrolladores de software\n\nEjemplo variables definidadas o sobreescritas en c√≥nsola que luego no se pueden ejecutar y se interrumpe la ejecuci√≥n del c√≥digo\n\nAceptar o rechazar cambios\n\nValor de un c√≥digo de desarrollo, por ejemplo, de un software\n:::\n\n## Qu√© es GitHub\n\nEs un sistema de alojamiento para proyectos que est√°n sustentados en Git. Adicional a una serie muy grande de funcionalidades, act√∫a como un repositorio p√∫blico o privado, de c√≥digos en distintos lenguajes.\n\nLos proyectos alojados en GitHub se sincronizan y pueden ser distribuidos automatizadamente.\n\n::: notes\nEjemplo de Google Drive\n\ncopilot\n\nactions\n\nteams\n\nrespaldo de los c√≥digos-. valor del trabajo\n\nreproducibilidad\n\nEjemplo distribuci√≥n: c√≥digos de tareas\n\nEjemplo\n:::\n\n## Beneficios\n\n-   Maximizar la reproducibilidad de los c√≥digos que soportan una investigaci√≥n o un desarrollo\n\n-   Integrar c√≥digos cuando se trabaja en equipo\n\n-   Flujos de trabajo automatizados\n\n    -   Actualizaci√≥n autom√°tica de p√°gina web\n\n    -   Contar con GitHub actions para ejecutare\n\n## Flujo de Trabajo\n\n![](images/clase1_virtual/git.png){width=\"120\"}\n\n### ‚ÜîÔ∏è\n\n![](images/clase1_virtual/github.png){width=\"120\"}\n\n### ‚ÜîÔ∏è\n\n![](images/clase1_virtual/rstudio.png){width=\"120\"}\n\n## Pasos\n\n## Verificar configuraciones e Instalaciones Previas de Git\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#which git\n\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git --version\n```\n:::\n\n\n\nEn caso de no estar instalado no aparecer√° nada o indicar√° que no est√° instalado\n\nEn caso de estar instalado ejecutar\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git update-git-for-windows\n\n```\n:::\n\n\n\n::: notes\nmacos\n\nInstalar Xcode command line tools\n\n<https://forums.developer.apple.com/forums/thread/677124>\n\nxcode-select --install\n\nHablar con Luis opci√≥n brew\n:::\n\n## Instalar Git\n\n**Enlace**\n\nüîó <https://git-scm.com/downloads>\n\nSeleccionar Sistema Operativo y versi√≥n Bits\n\nLinks Alternativos :\n\n-   üîó <https://gitforwindows.org>\n\n-   üîó <https://github.com/git-for-windows/git/releases/download/v2.47.0.windows.2/Git-2.47.0.2-64-bit.exe>\n\n::: notes\n<https://happygitwithr.com/install-git>\n:::\n\n## Presentarse a Git- Opci√≥n 1\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git config --global user.name \"Jane Doe\"\n#git config --global user.email \"jane@example.com\"\n\n```\n:::\n\n\n\nConfirmar configuraci√≥n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git config --global --list\n```\n:::\n\n\n\n## Presentarse a Git- Opci√≥n 2\n\n#### Instalar Paquete R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"usethis\")\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n#library(usethis) \n#use_git_config(user.name = \"Jane Doe\", user.email = \"jane@example.com\")\n```\n:::\n\n\n\nVerificar instalaci√≥n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git_sitrep()\n```\n:::\n\n\n\n## Crear PAT\n\nPersonal Access Token para conexiones HTTPS que es uno de los dos protocolos habilitados por GitHub para comunicarnos\n\n1.  Opci√≥n 1 Crear Token en <https://github.com/settings/tokens>\n\n2.  Opci√≥n 2 (intentar)Ejecutar esta instrucci√≥n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#usethis::create_github_token()\n```\n:::\n\n\n\nScopes: Seleccionar esto valores: ‚Äúrepo‚Äù, ‚Äúuser‚Äù, y ‚Äúworkflow‚Äù.\n\nTiempo de expiraci√≥n, al menos 180 d√≠as¬†\n\nCopiar token generado y guardar en lugar seguro\n\nEjecutar este comando para pegarlo y almacenarlo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#gitcreds::gitcreds_set()\n```\n:::\n\n\n\n## Usar protocolo HTTPS\n\n![](images/clase1_virtual/%20https.png){width=\"600\"}\n\n## Resto de Configuraciones - contin√∫a\n\n## Crear Repo en GitHub\n\n::: panel-tabset\n## Crear Repo\n\n![](images/clase1_virtual/1-repo.png){width=\"500\"}\n\n## Descripci√≥n\n\n![](images/clase1_virtual/2-repo.png){width=\"500\"}\n\n## Direcci√≥n HTTPS\n\n![](images/clase1_virtual/3-repo.png){width=\"500\"}\n:::\n\n## Clonar Repositorio\n\nEn la Shell o Terminal\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# git clone https://github.com/javendaXgh/github_test.git\n```\n:::\n\n\n\nMensaje similar a\n\n![](images/clase1_virtual/git clone.png)\n\nir a carpeta mendiante shell\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#cd github_test\n```\n:::\n\n\n\n## Clonar Repositorio -cont.\n\nEjecutar una a una\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#ls\n\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n#head README.md\n\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n#git remote show origin\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}