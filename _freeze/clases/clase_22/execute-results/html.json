{
  "hash": "8e276b53f0d0013fcf736641ee42c969",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ciencia de Datos para Economistas\"\nsubtitle: \"Clase 22- Uso de API's\"\ndate: \"29, january 2025\"\nauthor: \"MSc. José M. Avendaño\"\n# output:\n#   html_document:\n#     toc: yes\n#     incremental: true\n# filters:\n#   - webr\nformat:\n  revealjs:\n    incremental: true  \n---\n\n::: {.cell}\n\n:::\n\n\n\n## Objetivo\n\nRealizar consultas a distintas API's y procesar los datos obtenidos.\n\n## Ciclo\n\n![](images/cd_ciclo_api.png){width=\"700\"}\n\n## Definición API´s\n\nLas APIs (Application Programming Interfaces) son conjuntos de reglas y protocolos que permiten a diferentes aplicaciones comunicarse entre sí. En términos simples, una API es un intermediario que permite que dos programas se comuniquen sin necesidad de entender cómo están construidos internamente = *vamos a ponernos de acuerdo*\n\n#### API REST **(Representational State Transfer)**\n\nEs un estilo adoptado para diseñar servicios web, el cual se sustenta en el protocolo HTTP. Su objetivo principal es proporcionar una interfaz sencilla y eficiente para la comunicación entre diferentes sistemas o aplicaciones, permitiendo que puedan intercambiar datos de manera estándar.\n\n## ¿Cómo Funcionan?\n\n1.  **Identificar la API** : Encuentra una API que proporcione los datos que necesitas.\n\n2.  **Obtener credenciales (si es necesario)** : Algunas APIs requieren claves de acceso o tokens para autenticar tus solicitudes.\n\n3.  **Realizar una solicitud HTTP** : Utiliza métodos como GET, POST, etc., para enviar solicitudes a la API.\n\n4.  **Procesar la respuesta** : La API devolverá los datos en un formato como JSON o XML, que se deben procesar.\n\n![](images/clase22_2.png)\n\n## Métodos\n\n-   **GET** :\n\n    -   Se utiliza para solicitar datos del servidor.\n\n    -   Los parámetros se envían en la URL.\n\n    -   Es idempotente (realizar múltiples solicitudes tiene el mismo efecto que una sola).\n\n    -   No es seguro para enviar datos sensibles.\n\n-   **POST** :\n\n    -   Se utiliza para enviar datos al servidor, como crear o actualizar recursos.\n\n    -   Los parámetros se envían en el cuerpo de la solicitud.\n\n    -   No es idempotente (cada solicitud puede tener un efecto diferente).\n\n    -   Es más seguro para enviar datos sensibles.\n\n## Ejemplos:\n\n-   Obtener direcciones o datos de coordenadas de API de google maps\n\n-   **GitHub API**: estadísticas de uso\n\n-   Spotify API: obtener metadata sobre los contenidos de la plataforma\n\n## JSON\n\n**JSON (JavaScript Object Notation)** es un formato ligero de intercambio de datos que es fácil para humanos leer y escribir, y fácil para las computadoras de generar y analizar. Los datos generalmente están en estructuras anidadas\n\n## JSON 1: datos tabulares\n\n::::: columns\n::: {.column width=\"50%\"}\n```{}\n  \"empleados\": [\n    {\n      \"nombre\": \"Juan\",\n      \"edad\": 30,\n      \"departamento\": {\n        \"nombre\": \"Ventas\",\n        \"ubicacion\": \"Edificio A\"\n      }\n    },\n    {\n      \"nombre\": \"Ana\",\n      \"edad\": 25,\n      \"departamento\": {\n        \"nombre\": \"Marketing\",\n        \"ubicacion\": \"Edificio B\"\n      }\n    }\n  ]\n}\n\n```\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\nfromJSON('{\n  \"empleados\": [\n    {\n      \"nombre\": \"Juan\",\n      \"edad\": 30,\n      \"departamento\": {\n        \"nombre\": \"Ventas\",\n        \"ubicacion\": \"Edificio A\"\n      }\n    },\n    {\n      \"nombre\": \"Ana\",\n      \"edad\": 25,\n      \"departamento\": {\n        \"nombre\": \"Marketing\",\n        \"ubicacion\": \"Edificio B\"\n      }\n    }\n  ]\n}')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$empleados\n  nombre edad departamento.nombre departamento.ubicacion\n1   Juan   30              Ventas             Edificio A\n2    Ana   25           Marketing             Edificio B\n```\n\n\n:::\n:::\n\n\n:::\n:::::\n\n## JSON 2: datos no tabulares\n\n::::: columns\n::: {.column width=\"50%\"}\n```{}\n  \"libro\": {\n    \"titulo\": \"1984\",\n    \"autor\": \"George Orwell\",\n    \"publicado\": 1949,\n    \"generos\": [\"Dystopian\", \"Political Fiction\"],\n    \"reseña\": {\n      \"puntuacion\": 4.5,\n      \"comentario\": \"Una visión profunda de un futuro distópico.\"\n    }\n  }\n}\n\n```\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfromJSON('{\n  \"libro\": {\n    \"titulo\": \"1984\",\n    \"autor\": \"George Orwell\",\n    \"publicado\": 1949,\n    \"generos\": [\"Dystopian\", \"Political Fiction\"],\n    \"reseña\": {\n      \"puntuacion\": 4.5,\n      \"comentario\": \"Una visión profunda de un futuro distópico.\"\n    }\n  }\n}')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$libro\n$libro$titulo\n[1] \"1984\"\n\n$libro$autor\n[1] \"George Orwell\"\n\n$libro$publicado\n[1] 1949\n\n$libro$generos\n[1] \"Dystopian\"         \"Political Fiction\"\n\n$libro$reseña\n$libro$reseña$puntuacion\n[1] 4.5\n\n$libro$reseña$comentario\n[1] \"Una visión profunda de un futuro distópico.\"\n```\n\n\n:::\n:::\n\n\n:::\n:::::\n\n## Paquete HTTR2\n\nEs un cliente HTTP completo que proporciona una API moderna y canalizable para trabajar con APIs web. Se basa en {curl} para proporcionar características como objetos de solicitud explícitos, herramientas integradas de limitación de velocidad y reintento, soporte completo de OAuth y manejo seguro de secretos y credenciales.\n\nHTTR2 permite los métodos de solicitudes GET, POST, PUT, DELETE ﻿﻿\n\nSi la descarga arroja un error de timeout es necesario ejecutar en consola `options(timeout=numeroensegundos)`\n\n## Inspección JSON\n\nUsar función `View`\n\n![](images/cepal_inspect.png){width=\"700\"}\n\n# Caso 1: Patria Datos Covid Venezuela\n\nCifras COVID Venezuela disponibles en <https://covid19.patria.org.ve/estadisticas-venezuela/>\n\nUrl api: <https://covid19.patria.org.ve/api-covid-19-venezuela/>\n\n![](images/patria_request.png){width=\"400\"}\n\n## Caso 1: request\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr2)\nlibrary(jsonlite)\nlibrary(dplyr)\nreq_patria <- request(\"https://covid19.patria.org.ve/api/v1/timeline\")\n\nreq_patria\n```\n:::\n\n\n\n## Caso 1: definición método\n\n### GET \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreq_patria |> \n  req_method(\"GET\")\n```\n:::\n\n\n\n### revisión consulta\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreq_patria |> \n  req_dry_run()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGET /api/v1/timeline HTTP/1.1\nHost: covid19.patria.org.ve\nUser-Agent: httr2/1.0.7 r-curl/6.1.0 libcurl/8.7.1\nAccept: */*\nAccept-Encoding: gzip\n```\n\n\n:::\n:::\n\n\n\n## Caso 1: realizar request\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespuesta_patria <- req_perform(req_patria)\n\n# posterior a consulta\nrespuesta_patria |> \n  resp_status_desc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"OK\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrespuesta_patria |> \n  resp_content_type()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"application/json\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#str(respuesta_patria) más info\n```\n:::\n\n\n\n## Caso 1: procesar datos del request\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_patria <- respuesta_patria$body%>%\n  rawToChar()%>%\n  fromJSON()\n\nclass(datos_patria)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(datos_patria)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t1146 obs. of  6 variables:\n $ Date     : chr  \"2020-03-13\" \"2020-03-14\" \"2020-03-15\" \"2020-03-16\" ...\n $ DateTS   : int  1584072000 1584158400 1584244800 1584331200 1584417600 1584504000 1584590400 1584676800 1584763200 1584849600 ...\n $ Confirmed:'data.frame':\t1146 obs. of  2 variables:\n  ..$ Count: int  2 10 17 33 36 41 43 70 73 77 ...\n  ..$ New  : int  2 8 7 16 3 5 2 27 3 4 ...\n $ Recovered:'data.frame':\t1146 obs. of  2 variables:\n  ..$ Count: int  0 0 0 0 0 0 0 0 15 15 ...\n  ..$ New  : int  0 0 0 0 0 0 0 0 15 0 ...\n $ Deaths   :'data.frame':\t1146 obs. of  2 variables:\n  ..$ Count: int  0 0 0 0 0 0 0 0 0 0 ...\n  ..$ New  : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Active   :'data.frame':\t1146 obs. of  1 variable:\n  ..$ Count: int  2 10 17 33 36 41 43 70 58 62 ...\n```\n\n\n:::\n:::\n\n\n\n## Caso 1: View de datos\n\n![](images/patria_respuesta.png){fig-align=\"center\" width=\"800\"}\n\n## Caso 1: limpieza de datos\n\ndesanidado y convertir fechas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_datos_patria <- datos_patria%>%\n  mutate(fecha=as.Date(Date))%>%\n  mutate(Activos=as.integer(Active$Count))%>%\n  mutate(conf_acu=as.integer(Confirmed$Count))%>%\n  mutate(conf_nvos=as.integer(Confirmed$New))%>%\n  mutate(recu_acu=as.integer(Recovered$Count))%>%\n  mutate(recu_nvos=as.integer(Recovered$New))%>%\n  mutate(falle_acu=as.integer(Deaths$Count))%>%\n  mutate(falle_nvos=as.integer(Deaths$New))%>%\n  select(-c(Confirmed, Recovered, Deaths, Active, Date, DateTS))\n```\n:::\n\n\n\n## Caso 1: representación gráfica\n\nuso de librería plotly\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(df_datos_patria,\n                        x = ~fecha, \n                        y = ~Activos,\n                        type = 'bar',\n                        name = 'COVID: Casos Activos Venezuela')\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-07ad7be37a6b37a4e3c8\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-07ad7be37a6b37a4e3c8\">{\"x\":{\"visdat\":{\"125326e9f4b82\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"125326e9f4b82\",\"attrs\":{\"125326e9f4b82\":{\"x\":{},\"y\":{},\"name\":\"COVID: Casos Activos Venezuela\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"fecha\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Activos\"},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\",\"2021-07-26\",\"2021-07-27\",\"2021-07-28\",\"2021-07-29\",\"2021-07-30\",\"2021-07-31\",\"2021-08-01\",\"2021-08-02\",\"2021-08-03\",\"2021-08-04\",\"2021-08-05\",\"2021-08-06\",\"2021-08-07\",\"2021-08-08\",\"2021-08-09\",\"2021-08-10\",\"2021-08-11\",\"2021-08-12\",\"2021-08-13\",\"2021-08-14\",\"2021-08-15\",\"2021-08-16\",\"2021-08-17\",\"2021-08-18\",\"2021-08-19\",\"2021-08-20\",\"2021-08-21\",\"2021-08-22\",\"2021-08-23\",\"2021-08-24\",\"2021-08-25\",\"2021-08-26\",\"2021-08-27\",\"2021-08-28\",\"2021-08-29\",\"2021-08-30\",\"2021-08-31\",\"2021-09-01\",\"2021-09-02\",\"2021-09-03\",\"2021-09-04\",\"2021-09-05\",\"2021-09-06\",\"2021-09-07\",\"2021-09-08\",\"2021-09-09\",\"2021-09-10\",\"2021-09-11\",\"2021-09-12\",\"2021-09-13\",\"2021-09-14\",\"2021-09-15\",\"2021-09-16\",\"2021-09-17\",\"2021-09-18\",\"2021-09-19\",\"2021-09-20\",\"2021-09-21\",\"2021-09-22\",\"2021-09-23\",\"2021-09-24\",\"2021-09-25\",\"2021-09-26\",\"2021-09-27\",\"2021-09-28\",\"2021-09-29\",\"2021-09-30\",\"2021-10-01\",\"2021-10-02\",\"2021-10-03\",\"2021-10-04\",\"2021-10-05\",\"2021-10-06\",\"2021-10-07\",\"2021-10-08\",\"2021-10-09\",\"2021-10-10\",\"2021-10-11\",\"2021-10-12\",\"2021-10-13\",\"2021-10-14\",\"2021-10-15\",\"2021-10-16\",\"2021-10-17\",\"2021-10-18\",\"2021-10-19\",\"2021-10-20\",\"2021-10-21\",\"2021-10-22\",\"2021-10-23\",\"2021-10-24\",\"2021-10-25\",\"2021-10-26\",\"2021-10-27\",\"2021-10-28\",\"2021-10-29\",\"2021-10-30\",\"2021-10-31\",\"2021-11-01\",\"2021-11-02\",\"2021-11-03\",\"2021-11-04\",\"2021-11-05\",\"2021-11-06\",\"2021-11-07\",\"2021-11-08\",\"2021-11-09\",\"2021-11-10\",\"2021-11-11\",\"2021-11-12\",\"2021-11-13\",\"2021-11-14\",\"2021-11-15\",\"2021-11-16\",\"2021-11-17\",\"2021-11-18\",\"2021-11-19\",\"2021-11-20\",\"2021-11-21\",\"2021-11-22\",\"2021-11-23\",\"2021-11-24\",\"2021-11-25\",\"2021-11-26\",\"2021-11-27\",\"2021-11-28\",\"2021-11-29\",\"2021-11-30\",\"2021-12-01\",\"2021-12-02\",\"2021-12-03\",\"2021-12-04\",\"2021-12-05\",\"2021-12-06\",\"2021-12-07\",\"2021-12-08\",\"2021-12-09\",\"2021-12-10\",\"2021-12-11\",\"2021-12-12\",\"2021-12-13\",\"2021-12-14\",\"2021-12-15\",\"2021-12-16\",\"2021-12-17\",\"2021-12-18\",\"2021-12-19\",\"2021-12-20\",\"2021-12-21\",\"2021-12-22\",\"2021-12-23\",\"2021-12-24\",\"2021-12-25\",\"2021-12-26\",\"2021-12-27\",\"2021-12-28\",\"2021-12-29\",\"2021-12-30\",\"2021-12-31\",\"2022-01-01\",\"2022-01-02\",\"2022-01-03\",\"2022-01-04\",\"2022-01-05\",\"2022-01-06\",\"2022-01-07\",\"2022-01-08\",\"2022-01-09\",\"2022-01-10\",\"2022-01-11\",\"2022-01-12\",\"2022-01-13\",\"2022-01-14\",\"2022-01-15\",\"2022-01-16\",\"2022-01-17\",\"2022-01-18\",\"2022-01-19\",\"2022-01-20\",\"2022-01-21\",\"2022-01-22\",\"2022-01-23\",\"2022-01-24\",\"2022-01-25\",\"2022-01-26\",\"2022-01-27\",\"2022-01-28\",\"2022-01-29\",\"2022-01-30\",\"2022-01-31\",\"2022-02-01\",\"2022-02-02\",\"2022-02-03\",\"2022-02-04\",\"2022-02-05\",\"2022-02-06\",\"2022-02-07\",\"2022-02-08\",\"2022-02-09\",\"2022-02-10\",\"2022-02-11\",\"2022-02-12\",\"2022-02-13\",\"2022-02-14\",\"2022-02-15\",\"2022-02-16\",\"2022-02-17\",\"2022-02-18\",\"2022-02-19\",\"2022-02-20\",\"2022-02-21\",\"2022-02-22\",\"2022-02-23\",\"2022-02-24\",\"2022-02-25\",\"2022-02-26\",\"2022-02-27\",\"2022-02-28\",\"2022-03-01\",\"2022-03-02\",\"2022-03-03\",\"2022-03-04\",\"2022-03-05\",\"2022-03-06\",\"2022-03-07\",\"2022-03-08\",\"2022-03-09\",\"2022-03-10\",\"2022-03-11\",\"2022-03-12\",\"2022-03-13\",\"2022-03-14\",\"2022-03-15\",\"2022-03-16\",\"2022-03-17\",\"2022-03-18\",\"2022-03-19\",\"2022-03-20\",\"2022-03-21\",\"2022-03-22\",\"2022-03-23\",\"2022-03-24\",\"2022-03-25\",\"2022-03-26\",\"2022-03-27\",\"2022-03-28\",\"2022-03-29\",\"2022-03-30\",\"2022-03-31\",\"2022-04-01\",\"2022-04-02\",\"2022-04-03\",\"2022-04-04\",\"2022-04-05\",\"2022-04-06\",\"2022-04-07\",\"2022-04-08\",\"2022-04-09\",\"2022-04-10\",\"2022-04-11\",\"2022-04-12\",\"2022-04-13\",\"2022-04-14\",\"2022-04-15\",\"2022-04-16\",\"2022-04-17\",\"2022-04-18\",\"2022-04-19\",\"2022-04-20\",\"2022-04-21\",\"2022-04-22\",\"2022-04-23\",\"2022-04-24\",\"2022-04-25\",\"2022-04-26\",\"2022-04-27\",\"2022-04-28\",\"2022-04-29\",\"2022-04-30\",\"2022-05-01\",\"2022-05-02\",\"2022-05-03\",\"2022-05-04\",\"2022-05-05\",\"2022-05-06\",\"2022-05-07\",\"2022-05-08\",\"2022-05-09\",\"2022-05-10\",\"2022-05-11\",\"2022-05-12\",\"2022-05-13\",\"2022-05-14\",\"2022-05-15\",\"2022-05-16\",\"2022-05-17\",\"2022-05-18\",\"2022-05-19\",\"2022-05-20\",\"2022-05-21\",\"2022-05-22\",\"2022-05-23\",\"2022-05-24\",\"2022-05-25\",\"2022-05-26\",\"2022-05-27\",\"2022-05-28\",\"2022-05-29\",\"2022-05-30\",\"2022-05-31\",\"2022-06-01\",\"2022-06-02\",\"2022-06-03\",\"2022-06-04\",\"2022-06-05\",\"2022-06-06\",\"2022-06-07\",\"2022-06-08\",\"2022-06-09\",\"2022-06-10\",\"2022-06-11\",\"2022-06-12\",\"2022-06-13\",\"2022-06-14\",\"2022-06-15\",\"2022-06-16\",\"2022-06-17\",\"2022-06-18\",\"2022-06-19\",\"2022-06-20\",\"2022-06-21\",\"2022-06-22\",\"2022-06-23\",\"2022-06-24\",\"2022-06-25\",\"2022-06-26\",\"2022-06-27\",\"2022-06-28\",\"2022-06-29\",\"2022-06-30\",\"2022-07-01\",\"2022-07-02\",\"2022-07-03\",\"2022-07-04\",\"2022-07-05\",\"2022-07-06\",\"2022-07-07\",\"2022-07-08\",\"2022-07-09\",\"2022-07-10\",\"2022-07-11\",\"2022-07-12\",\"2022-07-13\",\"2022-07-14\",\"2022-07-15\",\"2022-07-16\",\"2022-07-17\",\"2022-07-18\",\"2022-07-19\",\"2022-07-20\",\"2022-07-21\",\"2022-07-22\",\"2022-07-23\",\"2022-07-24\",\"2022-07-25\",\"2022-07-26\",\"2022-07-27\",\"2022-07-28\",\"2022-07-29\",\"2022-07-30\",\"2022-07-31\",\"2022-08-01\",\"2022-08-02\",\"2022-08-03\",\"2022-08-04\",\"2022-08-05\",\"2022-08-06\",\"2022-08-07\",\"2022-08-08\",\"2022-08-09\",\"2022-08-10\",\"2022-08-11\",\"2022-08-12\",\"2022-08-13\",\"2022-08-14\",\"2022-08-15\",\"2022-08-16\",\"2022-08-17\",\"2022-08-18\",\"2022-08-19\",\"2022-08-20\",\"2022-08-21\",\"2022-08-22\",\"2022-08-23\",\"2022-08-24\",\"2022-08-25\",\"2022-08-26\",\"2022-08-27\",\"2022-08-28\",\"2022-08-29\",\"2022-08-30\",\"2022-08-31\",\"2022-09-01\",\"2022-09-02\",\"2022-09-03\",\"2022-09-04\",\"2022-09-05\",\"2022-09-06\",\"2022-09-07\",\"2022-09-08\",\"2022-09-09\",\"2022-09-10\",\"2022-09-11\",\"2022-09-12\",\"2022-09-13\",\"2022-09-14\",\"2022-09-15\",\"2022-09-16\",\"2022-09-17\",\"2022-09-18\",\"2022-09-19\",\"2022-09-20\",\"2022-09-21\",\"2022-09-22\",\"2022-09-23\",\"2022-09-24\",\"2022-09-25\",\"2022-09-26\",\"2022-09-27\",\"2022-09-28\",\"2022-09-29\",\"2022-09-30\",\"2022-10-01\",\"2022-10-02\",\"2022-10-03\",\"2022-10-05\",\"2022-10-06\",\"2022-10-07\",\"2022-10-08\",\"2022-10-09\",\"2022-10-10\",\"2022-10-11\",\"2022-10-12\",\"2022-10-13\",\"2022-10-14\",\"2022-10-15\",\"2022-10-16\",\"2022-10-17\",\"2022-10-18\",\"2022-10-19\",\"2022-10-21\",\"2022-10-22\",\"2022-10-23\",\"2022-10-24\",\"2022-10-25\",\"2022-10-26\",\"2022-10-27\",\"2022-10-28\",\"2022-10-29\",\"2022-10-30\",\"2022-10-31\",\"2022-11-01\",\"2022-11-02\",\"2022-11-03\",\"2022-11-04\",\"2022-11-05\",\"2022-11-06\",\"2022-11-07\",\"2022-11-08\",\"2022-11-09\",\"2022-11-10\",\"2022-11-11\",\"2022-11-12\",\"2022-11-13\",\"2022-11-14\",\"2022-11-15\",\"2022-11-16\",\"2022-11-17\",\"2022-11-18\",\"2022-11-19\",\"2022-11-20\",\"2022-11-21\",\"2022-11-22\",\"2022-11-23\",\"2022-11-24\",\"2022-11-25\",\"2022-11-26\",\"2022-11-27\",\"2022-11-28\",\"2022-11-29\",\"2022-11-30\",\"2022-12-01\",\"2022-12-02\",\"2022-12-03\",\"2022-12-04\",\"2022-12-05\",\"2022-12-06\",\"2022-12-07\",\"2022-12-08\",\"2022-12-09\",\"2022-12-10\",\"2022-12-11\",\"2022-12-12\",\"2022-12-13\",\"2022-12-14\",\"2022-12-15\",\"2022-12-16\",\"2022-12-17\",\"2022-12-18\",\"2022-12-19\",\"2022-12-20\",\"2022-12-21\",\"2022-12-22\",\"2022-12-23\",\"2022-12-24\",\"2022-12-25\",\"2022-12-26\",\"2022-12-27\",\"2022-12-28\",\"2022-12-29\",\"2022-12-30\",\"2022-12-31\",\"2023-01-01\",\"2023-01-02\",\"2023-01-03\",\"2023-01-04\",\"2023-01-05\",\"2023-01-06\",\"2023-01-07\",\"2023-01-08\",\"2023-01-09\",\"2023-01-10\",\"2023-01-11\",\"2023-01-12\",\"2023-01-13\",\"2023-01-14\",\"2023-01-15\",\"2023-01-16\",\"2023-01-17\",\"2023-01-18\",\"2023-01-19\",\"2023-01-20\",\"2023-01-21\",\"2023-01-22\",\"2023-01-23\",\"2023-01-24\",\"2023-01-25\",\"2023-01-26\",\"2023-01-27\",\"2023-01-28\",\"2023-01-29\",\"2023-01-30\",\"2023-01-31\",\"2023-02-01\",\"2023-02-02\",\"2023-02-03\",\"2023-02-04\",\"2023-02-05\",\"2023-02-06\",\"2023-02-07\",\"2023-02-08\",\"2023-02-09\",\"2023-02-10\",\"2023-02-11\",\"2023-02-12\",\"2023-02-13\",\"2023-02-14\",\"2023-02-15\",\"2023-02-16\",\"2023-02-17\",\"2023-02-18\",\"2023-02-19\",\"2023-02-20\",\"2023-02-21\",\"2023-02-22\",\"2023-02-23\",\"2023-02-24\",\"2023-02-25\",\"2023-02-26\",\"2023-02-27\",\"2023-02-28\",\"2023-03-01\",\"2023-03-02\",\"2023-03-03\",\"2023-03-04\",\"2023-03-05\",\"2023-03-06\",\"2023-03-07\",\"2023-03-08\",\"2023-03-09\",\"2023-03-10\",\"2023-03-11\",\"2023-03-12\",\"2023-03-13\",\"2023-03-14\",\"2023-03-15\",\"2023-03-16\",\"2023-03-17\",\"2023-03-18\",\"2023-03-19\",\"2023-03-20\",\"2023-03-21\",\"2023-03-22\",\"2023-03-23\",\"2023-03-24\",\"2023-03-25\",\"2023-03-26\",\"2023-03-27\",\"2023-03-28\",\"2023-03-29\",\"2023-03-30\",\"2023-03-31\",\"2023-04-01\",\"2023-04-02\",\"2023-04-03\",\"2023-04-04\",\"2023-04-05\",\"2023-04-06\",\"2023-04-07\",\"2023-04-08\",\"2023-04-09\",\"2023-04-10\",\"2023-04-11\",\"2023-04-12\",\"2023-04-13\",\"2023-04-14\",\"2023-04-15\",\"2023-04-16\",\"2023-04-17\",\"2023-04-18\",\"2023-04-19\",\"2023-04-20\",\"2023-04-21\",\"2023-04-22\",\"2023-04-23\",\"2023-04-24\",\"2023-04-25\",\"2023-04-26\",\"2023-04-27\",\"2023-04-28\",\"2023-04-29\",\"2023-04-30\",\"2023-05-01\",\"2023-05-02\",\"2023-05-03\",\"2023-05-04\"],\"y\":[2,10,17,33,36,41,43,70,58,62,69,76,91,75,72,78,87,93,99,98,98,94,96,100,93,94,93,78,82,73,79,70,73,77,84,105,101,130,158,156,166,175,180,181,178,177,177,179,181,177,187,189,190,193,193,186,188,202,211,207,193,210,222,220,253,290,367,486,561,610,672,738,849,865,898,932,1014,1054,1134,1185,1335,1467,1547,1682,1740,1909,1925,1964,2122,2228,2304,2369,2165,2118,2201,2288,2523,2621,2726,2922,3050,2686,2824,3000,3197,3411,3439,3604,3833,4132,4359,4116,4378,4588,5004,5243,5522,5391,5748,6049,6422,6705,6943,6864,7278,7495,7232,7401,5706,5490,5671,5569,5732,6002,5996,5575,5883,6225,6583,7035,7573,8145,8628,8952,9376,9958,10608,10998,11390,11358,9641,7994,7799,8725,9535,10584,10774,10939,10839,11149,10926,10565,10181,9269,8921,8800,8683,8393,8543,8396,8396,8230,8338,8573,8901,9312,9739,10073,10161,10684,10981,11238,11235,11424,11411,11704,11792,11631,11200,10426,10255,10013,10162,10115,10106,10080,9973,9812,9658,9568,9542,9269,9149,8961,8899,8864,8627,8412,8202,8145,7992,7843,7776,7652,7419,7405,7060,6739,6711,6206,6104,5934,5656,5373,5055,4929,4845,4826,4713,4690,4594,4461,4442,4368,4353,4349,4340,4401,4385,4372,4302,4265,4252,4169,4158,4145,4137,4128,4117,4108,4100,4111,4105,4211,4306,4285,4278,4268,4259,4234,4216,4190,4171,4158,4132,4118,4085,4067,4029,3998,3980,3967,3958,3948,3939,4026,4128,4244,4255,4365,4441,4589,4625,4721,4802,4773,4760,4789,4833,4849,4881,4882,4893,4951,4953,4965,4928,4901,4888,4895,4906,4927,4985,4990,5037,5046,5111,5326,5441,5583,5695,6004,6349,6587,6832,6734,6677,6629,6593,6581,6678,6746,6732,6755,6851,6859,6873,6902,6915,6914,6846,6802,6825,6858,6812,6757,6739,6736,6760,6727,6711,6680,6686,6663,6693,6664,6646,6634,6627,6610,6578,6659,6557,6550,6529,6522,6562,6531,6573,6560,6544,6533,6520,6593,6654,6808,6951,7096,7166,7277,7427,7939,8584,8872,9132,9166,9413,9724,9894,9879,9797,10170,10397,11049,11480,11642,12316,13172,13669,14318,14461,14822,15060,15555,15623,15618,15610,15640,15692,15803,15485,15326,15844,15374,15095,15033,15337,15398,15201,15191,15581,15778,16197,16347,16409,16446,15985,15438,15220,15425,15253,15322,14811,14783,14707,14445,14106,13873,13816,13703,13623,13529,13743,13876,13944,13978,13911,14073,14097,14413,14964,15353,15463,15581,15879,16160,16283,16368,16583,16898,16888,17099,17284,17452,17367,17025,17247,17299,17010,16858,16776,16973,16974,16990,16849,16708,16543,16025,15636,15848,16255,16039,15983,15794,15647,15632,15570,15502,15491,15232,15180,15064,14824,14755,14233,14024,13736,13704,13776,13994,13833,13832,13690,13522,13202,13143,13151,13130,13128,13115,12975,12679,12651,12519,12286,11994,11510,11380,11143,10962,10727,10679,10885,10678,10255,10141,10149,10129,10095,10063,9898,9865,9831,10020,9998,10025,10096,10075,10044,10153,10243,10396,10737,10850,10916,11323,11457,11649,12039,12066,11809,11743,11863,11828,11877,11868,12046,11888,11717,11851,11505,11638,11760,11896,11717,11679,11929,11894,12083,12202,12260,12168,12285,12638,12812,13251,13358,13577,13919,14002,14266,14433,14697,15041,15417,15654,15637,15579,15359,15276,15208,15266,15205,15180,15161,14878,14837,14508,14418,14146,13697,13324,13266,12856,12617,12583,12017,11603,11124,10772,10543,10472,10167,10045,9535,9476,9355,9332,9161,9092,9010,8879,8800,8762,8725,8653,8577,8416,8280,8486,8322,8067,8054,8003,7778,7727,7680,7659,7629,7602,7496,7452,7436,7410,7324,7276,7196,7101,7080,6968,6736,6722,6544,6488,6462,6427,6328,6295,6188,6162,6156,6146,6113,6070,5999,5901,5657,5466,5229,4981,4742,4650,4751,4832,4887,4968,4981,5167,5420,5762,6736,7628,8935,10255,11102,12536,13703,14511,15533,16134,16616,16990,17010,17041,17103,17179,17195,16472,16609,16879,17382,17225,17013,16843,17134,16709,16197,16268,15313,14500,14497,14338,13898,13358,13040,12755,12053,11454,11012,10535,10417,9270,8579,7791,7269,7378,6744,6355,6242,6004,5674,5285,5124,4806,4022,3678,3647,3374,3458,3540,3374,3051,3084,3218,3196,2964,2917,2729,2458,2385,2396,2179,1990,1863,1700,1566,1550,1505,1575,1609,1591,1641,1597,1671,1708,1733,1743,1716,1694,1644,1633,1603,1704,1638,1648,1569,1436,1390,1292,1230,1171,1111,1007,991,916,918,911,931,941,1022,1077,1072,1036,1007,1036,1064,1133,1116,1131,1065,1082,1040,1055,1083,1100,1122,1107,1050,1090,1082,1121,1105,1106,1082,1081,1091,1086,1078,1030,997,1021,1007,1000,998,1031,1022,1001,1013,1033,1090,1125,1146,1118,1138,1220,1256,1350,1423,1445,1459,1520,1529,1617,1784,1911,1862,1810,1789,1777,1880,2057,2173,2403,2326,2298,2233,2407,2553,2620,2855,2806,2701,2690,2588,2890,3056,3611,3593,3697,3615,3850,4017,4392,4598,4682,4476,4765,4528,4734,4778,5217,4904,5098,5175,5057,5076,5246,4891,4650,4441,4396,4037,4108,3979,3505,3395,3340,3098,2996,3008,2897,2650,2642,2427,2151,2130,2061,1962,1898,1746,1780,1763,1809,1822,1868,1826,1712,1690,1641,1686,1737,1847,1868,1773,1703,1661,1691,1554,1519,1494,1395,1304,1165,999,884,877,919,823,900,840,863,861,841,802,780,700,664,612,555,563,476,456,529,502,462,485,567,609,618,676,702,701,757,721,624,661,702,690,634,619,620,575,563,558,571,606,609,572,534,540,541,537,620,650,649,651,684,703,748,801,826,862,844,929,959,1000,1070,1092,1092,1058,1064,1061,1087,1104,1133,1071,1079,1086,1078,1111,1180,1170,1116,1167,1234,1256,1352,1422,1473,1440,1456,1543,1559,1665,1842,1784,1671,1647,1581,1530,1541,1557,1461,1291,1177,1171,963,948,950,884,791,747,636,572,624,726,742,733,747,742,807,813,877,864,843,879,853,745,727,724,789,784,739,740,672,650,665,636,599,518,513,441,365,364,428,414,468,470,465,461,455,454,438,433,411,334,334,280,273,257,254,254,269,285,290,354,379,379,367,368,386,406,409,390,373,361,298,275,282,284,284,275,266,270,276,283,282,286,290,293,295,304,308,309,312,309,312,311,299,292,283,277,269,258,247,240,235,227,231,241,244,245,249,252,253,253,250,258,266,265,267,278,283,292,297,302],\"name\":\"COVID: Casos Activos Venezuela\",\"type\":\"bar\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nmás info de plotly en el [enlace](https://plotly.com/r/)\n\n# Caso 2: Buscador Empleo\n\n![](images/empleate.png){fig-align=\"center\" width=\"700\"}\n\n## Caso 2: Realizar Consulta\n\nSe añaden headers que pide la API para entregar resultados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl_emplea <- 'https://www.empleate.com/venezuela/ofertas/empleos_encontrados/1/trabaios-en-venezuela-busqueda-por-economista'\n\nreq_emplea <- request(url_emplea)|>\n  req_method(\"GET\")|> \n  req_headers( Accept= \"*/*\",\n               `Accept-Language`= \"es,es-ES;q=0.9,en-US;q=0.8,en;q=0.7,gl;q=0.6\",\n               `User-Agent`= \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36\")|>\n  req_perform()\n\nreq_emplea\n```\n:::\n\n\n\n## Caso 3: inspección respuesta\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreq_emplea|> \n  resp_content_type()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"text/html\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndatos_html <- req_emplea$body|>\n  rawToChar()\n\nsubstr(datos_html,201000,201600)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"seguros\\\">                \\r\\n\\t\\t\\t\\t\\t\\t\\t        \\t<img class=\\\"d-block mx-auto img-fluid\\\" src=\\\"/img/empresas/economia_banca_finanzas_y_seguros.jpg\\\" width=\\\"80\\\" height=\\\"80\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t        \\t<p class=\\\"title widget-ofertas-areas\\\"><a href=\\\"/venezuela/ofertas/area/1/trabajos-en-venezuela-en-el-area-de-economia_banca_finanzas_y_seguros\\\" >Economía, Banca, Finanzas y Seguros</a></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t        </a>\\r\\n\\t\\t\\t\\t\\t\\t\\t      </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t      <div id=\\\"grilla\\\" class=\\\"grilla text-center slide col-md-1\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t      \\t\\t\\t\\t\\t\\t\\t\\t        <a href=\\\"/venezuela/ofertas/area/1/trabajos-en-venezuela-en-el-area-de-e\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrvest::read_html(datos_html)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{html_document}\n<html lang=\"es\">\n[1] <head>\\n<!-- Meta --><title>Empléate | Venezuela, Colombia, México, Perú, España, E ...\n[2] <body>\\r\\n<header><!--=== Header y nav ===--><link rel=\"stylesheet\" href=\"/css/nav- ...\n```\n\n\n:::\n:::\n\n\n\n# Caso 3 Dolar Monitor\n\nExtraer datos de API de monitor dólar\n\n![](images/mondol.png){fig-align=\"center\" width=\"800\" height=\"400\"}\n\n## Caso 3: realizar `request`\n\nEsta petición necesita llevar headers\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nreq_MonDol <- request('https://api.monitordolarvenezuela.com/historico')|>\n  req_method(\"GET\")|> \n  req_headers(Origin= \"https://monitordolarvenezuela.com\",\n              Referer= \"https://monitordolarvenezuela.com/\") |>\n  req_perform()\n\nreq_MonDol\n```\n:::\n\n\n\n## Caso 3: analizar respuesta\n\n1.  tipo de contenido:\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    req_MonDol|> \n      resp_content_type()\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"application/json\"\n    ```\n    \n    \n    :::\n    :::\n\n\n\n2.  Extraer datos de respuesta y extraer del json\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    datos_MonDol <- req_MonDol$body|>\n      rawToChar()|>\n      fromJSON()\n    ```\n    :::\n\n\n\n3.  Consultar clase y nombres de la respuesta\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    class(datos_MonDol)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"list\"\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    names(datos_MonDol)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"status\" \"total\"  \"result\"\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # str(datos_MonDol) para más info\n    ```\n    :::\n\n\n\n## Caso 3: extraer df con datos\n\nEs necesario hacer limpieza en las fechas, en los valores de caracteres a numéricos, redondear\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_MonDol <- datos_MonDol$result|>\n  as_tibble()|>\n  mutate(fecha= as.Date(fecha,format='%d/%m/%Y')) |>\n  arrange(fecha) %>%\n  mutate(across(all_of(c('MdvMin','MdvMax',\n                         'BcvMin','BcvMax')), \n                as.numeric),\n         across(all_of(c('MdvMin','MdvMax',\n                         'BcvMin','BcvMax')), ~round(.x, 2)))\n\nhead(df_MonDol)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  fecha      hora  MdvMin MdvMax BcvMin BcvMax\n  <date>     <chr>  <dbl>  <dbl>  <dbl>  <dbl>\n1 2024-12-31 00:00   65.2   65.9   52.0   52.0\n2 2025-01-01 00:00   65.2   66.2   52.0   52.0\n3 2025-01-02 00:00   64.8   66.1   52.0   52.6\n4 2025-01-03 00:00   64.8   66.7   52.6   53.0\n5 2025-01-04 00:00   66.0   66.6   53.0   53.0\n6 2025-01-05 00:00   65.7   66.5   53.0   53.0\n```\n\n\n:::\n:::\n\n\n\n## Caso 3: representación gráfica\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(apexcharter)\napex(data = df_MonDol, \n     mapping = aes(x = fecha, \n                   ymin = MdvMin,\n                   ymax= MdvMax),\n     type = \"rangeArea\",\n     serie_name = '$ Monitor',\n     synchronize = \"df_MonDol\")|>\n  ax_colors(c( \"#ff595e\"))\n\napex(data = df_MonDol, \n     mapping = aes(x = fecha, \n                   ymin = BcvMin,\n                   ymax= MdvMax),\n     type = \"rangeArea\",\n     serie_name = '$ BCV',\n     synchronize = \"df_MonDol\") |>\n  ax_colors( '#1982c4')\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"apexcharter html-widget html-fill-item\" id=\"htmlwidget-290fa9a7769c98b17ca4\" style=\"width:100%;height:350px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-290fa9a7769c98b17ca4\">{\"x\":{\"ax_opts\":{\"chart\":{\"type\":\"rangeArea\",\"group\":\"df_MonDol\"},\"series\":[{\"name\":\"$ Monitor\",\"type\":\"rangeArea\",\"data\":[{\"x\":1735603200000,\"y\":[65.18000000000001,65.91]},{\"x\":1735689600000,\"y\":[65.16,66.22]},{\"x\":1735776000000,\"y\":[64.84999999999999,66.09]},{\"x\":1735862400000,\"y\":[64.77,66.72]},{\"x\":1735948800000,\"y\":[65.95,66.64]},{\"x\":1736035200000,\"y\":[65.70999999999999,66.48]},{\"x\":1736121600000,\"y\":[66.09999999999999,66.61]},{\"x\":1736208000000,\"y\":[65.02,66.14]},{\"x\":1736294400000,\"y\":[65.05,65.75]},{\"x\":1736380800000,\"y\":[65.09999999999999,66.03]},{\"x\":1736467200000,\"y\":[65.34999999999999,67.33]},{\"x\":1736553600000,\"y\":[66.45,67.2]},{\"x\":1736640000000,\"y\":[66.18000000000001,67.45999999999999]},{\"x\":1736726400000,\"y\":[66.44,68.09]},{\"x\":1736812800000,\"y\":[64.44,66.88]},{\"x\":1736899200000,\"y\":[64.09999999999999,65.11]},{\"x\":1736985600000,\"y\":[63.88,65.12]},{\"x\":1737072000000,\"y\":[63.95,65.09]},{\"x\":1737158400000,\"y\":[63.27,64.70999999999999]},{\"x\":1737244800000,\"y\":[63.19,65.17]},{\"x\":1737331200000,\"y\":[62.13,64.23]},{\"x\":1737417600000,\"y\":[62.62,64.92]},{\"x\":1737504000000,\"y\":[63.13,66.39]},{\"x\":1737590400000,\"y\":[63.97,66.56999999999999]},{\"x\":1737676800000,\"y\":[64.16,66.54000000000001]},{\"x\":1737763200000,\"y\":[64.34,66.86]},{\"x\":1737849600000,\"y\":[64.67,67]},{\"x\":1737936000000,\"y\":[65.75,67.28]},{\"x\":1738022400000,\"y\":[66.26000000000001,67.98999999999999]},{\"x\":1738108800000,\"y\":[67.27,68.04000000000001]}]}],\"yaxis\":{\"labels\":{\"minWidth\":15,\"style\":{\"colors\":\"#848484\"}},\"decimalsInFloat\":2},\"dataLabels\":{\"enabled\":false},\"stroke\":{\"curve\":\"straight\",\"width\":2},\"xaxis\":{\"type\":\"datetime\",\"labels\":{\"style\":{\"colors\":\"#848484\"}}},\"colors\":[\"#ff595e\"]},\"auto_update\":{\"series_animate\":true,\"update_options\":false,\"options_animate\":true,\"options_redrawPaths\":true,\"update_synced_charts\":false},\"sparkbox\":false,\"xaxis\":{\"min\":\"2024-12-31\",\"max\":\"2025-01-29\"},\"type\":\"rangeArea\",\"serie_name\":\"$ Monitor\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"apexcharter html-widget html-fill-item\" id=\"htmlwidget-49ae12fccb0f0bae5c86\" style=\"width:100%;height:350px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-49ae12fccb0f0bae5c86\">{\"x\":{\"ax_opts\":{\"chart\":{\"type\":\"rangeArea\",\"group\":\"df_MonDol\"},\"series\":[{\"name\":\"$ Monitor\",\"type\":\"rangeArea\",\"data\":[{\"x\":1735603200000,\"y\":[52.03,65.91]},{\"x\":1735689600000,\"y\":[52.03,66.22]},{\"x\":1735776000000,\"y\":[52.03,66.09]},{\"x\":1735862400000,\"y\":[52.57,66.72]},{\"x\":1735948800000,\"y\":[53.01,66.64]},{\"x\":1736035200000,\"y\":[53.01,66.48]},{\"x\":1736121600000,\"y\":[53.01,66.61]},{\"x\":1736208000000,\"y\":[53.01,66.14]},{\"x\":1736294400000,\"y\":[53.07,65.75]},{\"x\":1736380800000,\"y\":[53.28,66.03]},{\"x\":1736467200000,\"y\":[53.85,67.33]},{\"x\":1736553600000,\"y\":[53.88,67.2]},{\"x\":1736640000000,\"y\":[53.88,67.45999999999999]},{\"x\":1736726400000,\"y\":[53.88,68.09]},{\"x\":1736812800000,\"y\":[53.88,66.88]},{\"x\":1736899200000,\"y\":[53.96,65.11]},{\"x\":1736985600000,\"y\":[54.37,65.12]},{\"x\":1737072000000,\"y\":[54.76,65.09]},{\"x\":1737158400000,\"y\":[54.91,64.70999999999999]},{\"x\":1737244800000,\"y\":[54.91,65.17]},{\"x\":1737331200000,\"y\":[54.91,64.23]},{\"x\":1737417600000,\"y\":[54.99,64.92]},{\"x\":1737504000000,\"y\":[55.3,66.39]},{\"x\":1737590400000,\"y\":[55.76,66.56999999999999]},{\"x\":1737676800000,\"y\":[56.28,66.54000000000001]},{\"x\":1737763200000,\"y\":[56.65,66.86]},{\"x\":1737849600000,\"y\":[56.65,67]},{\"x\":1737936000000,\"y\":[56.65,67.28]},{\"x\":1738022400000,\"y\":[56.86,67.98999999999999]},{\"x\":1738108800000,\"y\":[57.3,68.04000000000001]}]}],\"yaxis\":{\"labels\":{\"minWidth\":15,\"style\":{\"colors\":\"#848484\"}},\"decimalsInFloat\":2},\"dataLabels\":{\"enabled\":false},\"stroke\":{\"curve\":\"straight\",\"width\":2},\"xaxis\":{\"type\":\"datetime\",\"labels\":{\"style\":{\"colors\":\"#848484\"}}},\"colors\":[\"#1982c4\"]},\"auto_update\":{\"series_animate\":true,\"update_options\":false,\"options_animate\":true,\"options_redrawPaths\":true,\"update_synced_charts\":false},\"sparkbox\":false,\"xaxis\":{\"min\":\"2024-12-31\",\"max\":\"2025-01-29\"},\"type\":\"rangeArea\",\"serie_name\":\"$ Monitor\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n:::::\n\n# Caso 4: Consulta LLM 1, API Google AI Studio\n\n![](images/google_ai_studio.png){fig-align=\"center\" width=\"800\"}\n\n## Caso 4: obtener datos\n\n::::: columns\n::: {.column width=\"50%\"}\n![](images/ucab_economia.png){fig-align=\"left\" width=\"400\"}\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\ndato_texto_ucab <- read_html('https://economia.ucab.edu.ve/perspectivas-economicas-de-2025-discutieron-especialistas-en-la-ucab/')|>\n  html_nodes('p')|>\n  html_text()|>\n  paste(collapse = '. ')%>%\n  str_squish()\n\n# inspección texto descargado\nsubstr(dato_texto_ucab, 100, 1400)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"diantes Economía | 0 Comentarios. . En un congreso organizado por la Escuela de Economía, los panelistas señalaron que la brecha entre el tipo de cambio oficial y el paralelo suele preceder procesos de devaluación, como ya lo está experimentando el bolívar. Dijeron que el próximo año seguirá marcado por los esfuerzos que se hagan para incrementar la producción petrolera, mientras que el mercado bursátil intentará convertirse en un actor protagónico en el ámbito del financiamiento. Las condiciones estructurales de la economía venezolana hacia el cierre de 2024 invitan a pensar que en 2025 el país experimentará una mayor inflación que la vista este año, según proyectaron expertos durante el foro ‘»Perspectivas Económicas: Retos y Oportunidades para la Economía Venezolana», realizado en el marco del XXVIII Congreso de Actualidad Económica de la Escuela de Economía de la UCAB.. En las últimas semanas, el bolívar ha venido sufriendo una caída importante de su valor frente al dólar, rompiendo con la relativa estabilidad monetaria que caracterizó la mayor parte del año. El tipo de cambio oficial, determinado por el Banco Central de Venezuela (BCV) se desplazó 15,86% en apenas un mes, al pasar de Bs 38,88 a Bs 45,05. A esto se suma la brecha que se mantiene con el tipo de cambio paralelo,\"\n```\n\n\n:::\n:::\n\n\n:::\n:::::\n\n## Caso 4: definir prompt consulta\n\nEres un experto en análisis de noticias económicas. Vas a extraer en formato json las ideas principales expuestas en el texto {idea_principal_nombre: descripcion} del texto delimitado por triple asterisco. Texto: \\*\\*\\* ....... \\*\\*\\*. Recuerda solo extraer el valor y no añadir información adicional.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# definir el prompt\nprompt <- 'Eres un experto en análisis de noticias económicas. Vas a extraer en formato json las ideas principales expuestas en el texto {idea_principal_nombre: descripcion} del texto delimitado por triple asterisco. Texto: ***'\n\npost_texto <- '***.  Recuerda solo extraer el valor y no añadir información adicional. '\n\ndato_texto_prompt_gooaistudio <- paste(prompt,\n                                       dato_texto_ucab,\n                                       post_texto)\n```\n:::\n\n\n\n## Caso 4: API Google AI Studio\n\nConectarse desde `R` a esta API que pide KEY y `body` en el request\n\n![](images/gooaistudio.png)\n\n## Caso 4: crear request\n\nCambiar API key\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngooai_studio_url <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent'\n                \napi_key <- ''\n\nllm_resultado_google <- request(gooai_studio_url) %>%\n  req_headers(\"Content-Type\" = \"application/json\") %>%\n  req_body_json(\n    list(\n      contents = list(\n        list(\n          parts = list(\n            list(text = dato_texto_prompt_gooaistudio)\n          )\n        )\n      )\n    )\n  ) %>% \n  req_url_query(key = api_key) %>% \n  req_method(\"POST\")|>\n  req_perform()\n```\n:::\n\n\n\n## Caso 4: procesar datos request\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n\ndatos_goo_respuesta <- llm_resultado_google$body |>\n  rawToChar() |>\n  fromJSON()%>%\n  .$candidates %>%\n  .$content%>%\n  .$parts%>%\n  .[[1]]%>%\n  str_squish(.)%>%\n  str_remove_all(.,'```json | ```')%>%\n  fromJSON()\n```\n:::\n\n\n\n## Caso 4: Analizar resultados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: true\n#|echo: false\n\n\ndatos_goo_respuesta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n````\nparts\n1 ```json\\n{\\n  \"Inflación y tipo de cambio\": \"La brecha entre el tipo de cambio oficial y el paralelo en Venezuela anticipa procesos de devaluación y aumento de la inflación. Se proyecta una inflación del 50% para 2024 y del 70% para 2025, aunque se descarta una hiperinflación inminente. La política de anclaje del tipo de cambio oficial, mediante la inyección de dólares, muestra fisuras y su efectividad depende del déficit fiscal.\",\\n  \"Producción petrolera\": \"Para 2025 se espera un incremento en la producción petrolera, superando posiblemente el millón de barriles diarios gracias a las inversiones de Chevron. Sin embargo, la dependencia del petróleo y las sanciones limitan el crecimiento económico.\",\\n  \"Mercado bursátil\": \"El mercado bursátil venezolano busca un rol protagónico en el financiamiento, con la Bolsa de Valores de Caracas duplicando sus cifras en 2024.  Se requiere promover la educación financiera y la imagen de Venezuela como destino de inversión para atraer capital extranjero.\",\\n  \"Resiliencia económica\": \"La economía venezolana se presenta como un posible espacio de consenso y diálogo en un contexto político polarizado. Se destaca la necesidad de abandonar el modelo rentista y extractivista para lograr un desarrollo sostenible.\"\\n}\\n```\\n\n   role\n1 model\n````\n\n\n:::\n:::\n\n\n\n# Caso 5: Consulta LLM 2, Ollama local network\n\n![](images/ollama_portada.png){fig-align=\"center\" width=\"800\"}\n\n## Caso 5: obtener datos\n\n::::: columns\n::: {.column width=\"50%\"}\n![](images/precio_divisa.png){fig-align=\"left\"}\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(stringr)\ndato_texto <- read_html('https://www.swissinfo.ch/spa/el-precio-del-dólar-en-venezuela-supera-los-57-bolívares-y-la-moneda-local-sigue-en-caída/88794237')|>\n  html_nodes('p')|>\n  html_text()|>\n  paste(collapse = '. ')%>%\n  str_squish()\nsubstr(dato_texto, 200, 400)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \" de tres meses frente a la estadounidense, usada ampliamente en el país caribeño para cotizar bienes y algunos servicios.. Según informó el Banco Central de Venezuela (BCV), el dólar alcanzó hoy los 57\"\n```\n\n\n:::\n:::\n\n\n:::\n:::::\n\n## Caso 5: crear prompt\n\n::::: columns\n::: {.column width=\"50%\"}\nPrompt: vas a extraer en formato json el valor del dolar del texto delimitado por triple asterisco. Texto: \\*\\*\\* .... \\*\\*\\*. Recuerda solo extraer el valor y no añadir información adicional.\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprompt <- 'vas a extraer en formato json el valor del dolar del texto delimitado por triple asterisco. Texto: ***'\n  \npost_texto <- '***.  Recuerda solo extraer el valor y no añadir información adicional. '\n\ndato_texto_prompt <- paste(prompt,\n                           dato_texto,\n                           post_texto)\n```\n:::\n\n\n:::\n:::::\n\n## Caso 5: crear request\n\n-   Cambiar url por el de la IP donde está la API en la red local\n\n-   Se pasan distintos argumentos en el body del request: modelo, prompt, temperatura del llm, etc\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl_ollama <- 'http://localhost:11434' # modificar url por dirección ip host\n\nendpoint <- paste0(url_ollama, '/api/generate')\n\nllm_resultado <- request(endpoint)|>\n  req_method(\"POST\")|> \n  req_body_json(list(  model='llama3.2:1b',\n                       prompt = dato_texto_prompt,\n                       raw=FALSE,\n                       format = \"json\",\n                       options=list(\n                         temperature= 0.1),\n                       stream = FALSE,\n                       keep_alive='3m'))|>\n  req_perform()|>\n  resp_body_json()\n```\n:::\n\n\n\n## Caso 5: procesar request\n\nLos datos hay que extraerlos del JSON\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfromJSON(llm_resultado$response)|>\n  as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  dolar_venezolano\n             <dbl>\n1             57.3\n```\n\n\n:::\n:::\n\n\n\n# Caso 6: Consulta API Cepal\n\n![](images/api_cepal.png){fig-align=\"center\" width=\"800\"}\n\n<https://statistics.cepal.org/portal/cepalstat/open-data.html?lang=es>\n\n## Obtener Clasificador Temático\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_cepal <- request(\"https://api-cepalstat.cepal.org/cepalstat/api/v1/thematic-tree?lang=es&format=json\")|>\n  req_headers(\"Accept\" = \"application/json\")|>\n  req_perform()|>\n  resp_body_json()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<script src=\"../site_libs/apexcharter-binding-0.4.2/apexcharter.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}