quarto::render_site()
library(quarto)
library(rvest)
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes('.pr-2')%>%
html_nodes()
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes('.pr-2')%>%
html_text()
read_html('https://www.globovision.com/nacional/28865/an-recibe-proyectos-de-ley-de-presupuesto-nacional-2025-y-ley-de-endeudamiento-2025')%>%
html_nodes('p')%>%
html_text()
shiny::runApp('~/R/sistema_info/sistema_info')
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes('#chart-bvc')%>%
html_text()
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes('//*[(@id = "chart-bvc")]')%>%
html_text()
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes('\\/\\/*[(@id = "chart-bvc")]')%>%
html_text()
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes("AmCharts.charts[0].dataProvider")%>%
html_text()
read_html('https://www.bolsadecaracas.com/')%>%
html_nodes("AmCharts.charts")%>%
html_text()
runApp('lectures/testapp.R')
install.packages(c("shiny", "ggplot2", "leaflet", "httr"))
library(shiny); runApp('testapp.R')
install.packages(c("shiny", "ggplot2", "leaflet", "httr"))
library(shiny); runApp('testapp.R')
install.packages(c("shiny", "ggplot2", "leaflet", "httr"))
library(shiny); runApp('lectures/testapp.R')
runApp('lectures/testapp.R')
runApp('lectures/testapp.R')
library(shiny)
# Crea la interfaz de usuario UI
ui <- fluidPage(
titlePanel("Visualización de mtcars"),
sidebarLayout(
sidebarPanel(
selectInput("cyl", "Número de cilindros:", choices = unique(mtcars$cyl)),
sliderInput("disp", "Caballos de fuerza (min-max):", min = 0, max = 500, value = c(0, 500)),
actionButton("submit", "Filtrar")
),
mainPanel(
tableOutput("mtcarsTable"),
plotOutput("mtcarsPlot")
)
)
)
# Crea la función servidor SV
server <- function(input, output) {
filteredData <- reactive({
mtcars %>% filter(cyl == input$cyl & disp >= input$disp[1] & disp <= input$disp[2])
})
output$mtcarsTable <- renderTable({
filteredData()
})
output$mtcarsPlot <- renderPlot({
ggplot(filteredData(), aes(x = disp, y = mpg)) +
geom_point() +
labs(title = "Gráfico de dispersión: Caballos de fuerza vs. Consumo de combustible")
})
observeEvent(input$submit, {
message("Filtrado realizado.")
})
}
# Lanza la aplicación
shinyApp(ui = ui, server = server)
runApp('lectures/testapp.R')
library(rvest)
read_html('https://www.bibliaon.com/es/versiculos_biblicos_conocidos/')%>%
html_nodes('p')%>%
html_text()
texto_biblia <- read_html('https://www.bibliaon.com/es/versiculos_biblicos_conocidos/')%>%
html_nodes('p')%>%
html_text()
paste(texto_biblia[1:10], collapse = ' .')
