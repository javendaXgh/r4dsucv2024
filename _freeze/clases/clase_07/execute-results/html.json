{
  "hash": "58151de0c768f1972d833fc9305ca40a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ciencia de Datos para Economistas\"\nsubtitle: \"Clase 7- DF subsetting; Ayudas\"\n#format: live-html\nfilters:\n  - webr\nengine: knitr\ndate: \"Noviembre 6, 2024\"\nformat: \n  revealjs:\n    incremental: true   \n---\n\n\n\n## Estructuras de Datos- Repaso\n\n| Objeto | R | Ejemplo |\n|:--:|:--:|:--:|\n| ![](images/%20clase_3/atomo.png){width=\"80\"} | vector at√≥mico | c(1) |\n| ![](images/%20clase_3/molecula.png){width=\"120\" height=\"80\"} Ô∏è | vector | c('a', 'x', 'd') |\n| ![](images/%20clase_3/molecula2.png){width=\"110\"} | m√°triz | matrix(1:8,2,4) |\n\n## Estructuras de Datos 2 - Repaso\n\n| Objeto | R | Ejemplo |\n|:--:|:--:|:--:|\n| ![](images/%20clase_3/polimero.png){width=\"140\"} | lista | lista_test \\<- list(primer=c('a', 'x'), segun=c(1)) |\n| ![](images/%20clase_3/virus.png){width=\"94\"} | data frame | mtcars |\n| ![](images/%20clase_3/proteina.png){width=\"76\"} | tibble | as_tibble(mtcars) |\n\n## Data Frames\n\nLas **data frames** son un tipo de estructura de datos en R que permite almacenar y manipular conjuntos de datos tabulares. Es similar a un conjunto de hojas de c√°lculo o una tabla SQL.\n\nCaracter√≠sticas principales del data frame:\n\n1.  **Columnas Variadas** : Cada columna puede contener datos de diferentes tipos (num√©ricos, caracteres, factores, etc.).\n\n2.  **Filas Etiquetadas** : Las filas pueden estar etiquetadas con nombres.\n\n## Data Frames - cont.\n\n3.  **Estructura Tabular** : Los datos est√°n organizados en filas y columnas, lo que hace que sean f√°ciles de leer y analizar.\n\n4.  **Manipulaci√≥n Flexible** : Se pueden realizar operaciones complejas sobre los datos, como selecci√≥n, filtrado, agrupamiento y transformaci√≥n.\n\n## **Relaci√≥n Data Frames - Listas**\n\n-   **Estructura Anidada** : Un data frame es una estructura anidada donde cada columna (o columna) es un vector. Esta estructura se puede pensar como una lista de vectores.\n\n-   **Etiquetas de Columnas** : Cada columna en un data frame tiene una etiqueta o nombre, lo que la distingue de una lista ordinaria.\n\n-   **Manipulaci√≥n y Acceso** : Las operaciones de acceso y manipulaci√≥n a los data frames se basan en estas estructuras anidadas y etiquetas.\n\n## Acceso Elementos DF\n\n| **Vector** | **lista** | **DF**    |\n|------------|-----------|-----------|\n| \\[ \\]      | \\[ \\]     | \\[ \\]     |\n|            | \\[\\[ \\]\\] | \\[\\[ \\]\\] |\n|            | \\$        | \\$        |\n\n## M√©todos \\[ \\], \\$ y \\[\\[ \\]\\]\n\n1.  \\[ \\]\n\n2.  \\$\n\n3.  \\[\\[ \\]\\]\n\n## Ejemplos Accesos- DF/ fila\n\n\\[i,j\\] mediante √≠ndices\n\ni=fila\n\nj=columna\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# acceso fila 2\nmtcars[2,]\n#mtcars['Datsun 710',]\n\n```\n:::\n\n\n\n## Ejemplos Accesos- DF/columna\n\n\\[i,j\\] mediante √≠ndices\n\ni=fila\n\nj=columna\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# acceso columna 3\nmtcars[,3]\n#mtcars[[3]]\n#mtcars$disp\n#mtcars['disp']\n```\n:::\n\n\n\n## Ejemplos Accesos- DF/ elemento\n\n\\[i,j\\] mediante √≠ndices\n\ni=fila\n\nj=columna\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# elemento determinado i=2, j=3\nmtcars[2,3]\n\n```\n:::\n\n\n\n## 2da Parte/ Ayudas\n\n::::: columns\n::: {.column width=\"50%\"}\n![](images/stackoverflow2.jpg){width=\"400\"}\n:::\n\n::: {.column width=\"50%\"}\n¬øPara qu√© necesitamos ayuda? Opciones:\n\n-   Manual del Paquete\n\n-   Vignettes\n\n-   Cheat Sheets\n\n-   Otras (LLM¬¥s, googlear, stackoverflow, foros, etc)\n:::\n:::::\n\n## Documentaci√≥n Paquetes\n\nLa documentaci√≥n sobre las utilidades y funcionalidades de cada paquete. En el **manual del paquete** se ordenan alfab√©ticamente las funciones que est√°n contenidas y para cada funci√≥n se ilustra uno o m√°s caso de usos.\n\nHay paquetes que tienen flujos de trabajo donde se require usar diversas funciones del mismo, no obstante, con el manual muchas veces no se tiene una perspectiva general sobre c√≥mo lograrlo.\n\nüëé La lectura alfab√©tica de las funciones no resulta pr√°ctica, sino s√≥lo referencial.\n\n## Obtenci√≥n Documetaci√≥n Paquete\n\n-   V√≠a Cran\n\n-   V√≠a RStudio:\n\n    -   Con operador `?` o `??` sino est√° cargado\n\n    -   Secci√≥n derecha-inferior, tab \"Packages\"\n\n## Vignettes\n\nSon documentos en formato HTML o PDF que proporcionan tutoriales, ejemplos de c√≥digo y descripciones detalladas sobre el uso de ciertos paquetes.\n\n## Caracter√≠sticas vignettes:\n\n1.  **Ejemplos**\n\n2.  **Contenido Detallado**\n\n3.  **Versi√≥n Interactiva**\n\n4.  **Documentaci√≥n Adicional**\n\n### Acceso Vignettes\n\nPara acceder a las vignettes de un paquete espec√≠fico, puedes usar la siguiente funci√≥n en R `browseVignettes(\"nombre_del_paquete\")`\n\n## Cheat Sheets\n\nLas **cheat sheets** (hojas r√°pidas o hojas de trucos) son documentos en formato PDF que resumen informaci√≥n esencial sobre un paquete espec√≠fico.\n\nEstas hojas proporcionan una visi√≥n r√°pida y un resumen conciso de los comandos, funciones de un paquete.\n\nEnlace <https://posit.co/resources/cheatsheets/?type=translations/>\n\n## Ejemplo Paquete readr\n\n![](images/clase_7/cheat.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}