---
title: "Clase Virtual 1: Configurando Git y GitHub"
format: revealjs
---

## Or√≠genes Presentaci√≥n

Estas l√°minas est√°n basadas en el contenido desarrollado por la Prof¬™. [Jennifer Bryan](https://github.com/jennybc/happy-git-with-r) en el libro electr√≥nico [**Happy Git and GitHub for the useR**](https://happygitwithr.com/) , as√≠ como en el taller .. desarrollado por la prof¬™ [**Mine √áetinkaya-Rundel**](http://mine-cr.com/),¬†.Teaching computing with Git and GitHub disponible en el link <https://mine-cetinkaya-rundel.github.io/teach-r-online/03-git/03-git.html#1>

::: notes
Verificar que han instalado paquetes
:::

## Objetivos

1.  Instar Git
2.  Sincronizar cuenta GitHub con RStudio
3.  Clonar y sincronizar un repositorio

## Qu√© es Git

Un sistema de control de versiones donde quedan registrados los cambios que se van haciendo a un archivo, que junto con otros archivos, conforman lo que se denomina un repositorio.

Por ejemplo, el repositorio <https://github.com/javendaXgh/r4dsucv2024> contiene todos los archivos de extensiones html, css, js, qmd, R, as√≠ como las carpetas que dan sustento al site del curso <https://ucveconomiar4ds.netlify.app>

::: notes
prop√≥sito original, dar soporte a grupos de desarrolladores de software

Ejemplo variables definidadas o sobreescritas en c√≥nsola que luego no se pueden ejecutar y se interrumpe la ejecuci√≥n del c√≥digo

Aceptar o rechazar cambios

Valor de un c√≥digo de desarrollo, por ejemplo, de un software
:::

## Qu√© es GitHub

Es un sistema de alojamiento para proyectos que est√°n sustentados en Git. Adicional a una serie muy grande de funcionalidades, act√∫a como un repositorio p√∫blico o privado, de c√≥digos en distintos lenguajes.

Los proyectos alojados en GitHub se sincronizan y pueden ser distribuidos automatizadamente.

::: notes
Ejemplo de Google Drive

copilot

actions

teams

respaldo de los c√≥digos-. valor del trabajo

reproducibilidad

Ejemplo distribuci√≥n: c√≥digos de tareas

Ejemplo
:::

## Beneficios

-   Maximizar la reproducibilidad de los c√≥digos que soportan una investigaci√≥n o un desarrollo

-   Integrar c√≥digos cuando se trabaja en equipo

-   Flujos de trabajo automatizados

    -   Actualizaci√≥n autom√°tica de p√°gina web

    -   Contar con GitHub actions para ejecutare

## Flujo de Trabajo

![](images/clase1_virtual/git.png){width="120"}

### ‚ÜîÔ∏è

![](images/clase1_virtual/github.png){width="120"}

### ‚ÜîÔ∏è

![](images/clase1_virtual/rstudio.png){width="120"}

## Pasos

## Verificar configuraciones e Instalaciones Previas de Git

```{bash}
#which git


```

```{bash}
#git --version
```

En caso de no estar instalado no aparecer√° nada o indicar√° que no est√° instalado

En caso de estar instalado ejecutar

```{bash}
#git update-git-for-windows

```

::: notes
macos

Instalar Xcode command line tools

<https://forums.developer.apple.com/forums/thread/677124>

xcode-select --install

Hablar con Luis opci√≥n brew
:::

## Instalar Git

**Enlace**

üîó <https://git-scm.com/downloads>

Seleccionar Sistema Operativo y versi√≥n Bits

Links Alternativos :

-   üîó <https://gitforwindows.org>

-   üîó <https://github.com/git-for-windows/git/releases/download/v2.47.0.windows.2/Git-2.47.0.2-64-bit.exe>

::: notes
<https://happygitwithr.com/install-git>
:::

## Presentarse a Git- Opci√≥n 1

```{bash}
#git config --global user.name "Jane Doe"
#git config --global user.email "jane@example.com"

```

Confirmar configuraci√≥n

```{bash}
#git config --global --list
```

## Presentarse a Git- Opci√≥n 2

#### Instalar Paquete R

```{r}
#install.packages("usethis")
```

```{bash}
#library(usethis) 
#use_git_config(user.name = "Jane Doe", user.email = "jane@example.com")
```

Verificar instalaci√≥n

```{bash}
#git_sitrep()
```

## Crear PAT

Personal Access Token para conexiones HTTPS que es uno de los dos protocolos habilitados por GitHub para comunicarnos

1.  Opci√≥n 1 Crear Token en <https://github.com/settings/tokens>

2.  Opci√≥n 2 (intentar)Ejecutar esta instrucci√≥n

```{r}
#usethis::create_github_token()
```

Scopes: Seleccionar esto valores: ‚Äúrepo‚Äù, ‚Äúuser‚Äù, y ‚Äúworkflow‚Äù.

Tiempo de expiraci√≥n, al menos 180 d√≠as¬†

Copiar token generado y guardar en lugar seguro

Ejecutar este comando para pegarlo y almacenarlo

```{r}
#gitcreds::gitcreds_set()
```

## Usar protocolo HTTPS

![](images/clase1_virtual/%20https.png){width="600"}

## Resto de Configuraciones - contin√∫a

## Crear Repo en GitHub

::: panel-tabset
## Crear Repo

![](images/clase1_virtual/1-repo.png){width="500"}

## Descripci√≥n

![](images/clase1_virtual/2-repo.png){width="500"}

## Direcci√≥n HTTPS

![](images/clase1_virtual/3-repo.png){width="500"}
:::

## Clonar Repositorio

En la Shell o Terminal

```{bash}
# git clone https://github.com/javendaXgh/github_test.git
```

Mensaje similar a

![](images/clase1_virtual/git%20clone.png)

ir a carpeta mendiante shell

```{bash}
#cd github_test
```

## Clonar Repositorio -cont.

Ejecutar una a una

```{bash}
#ls

```

```{bash}
#head README.md

```

```{bash}
#git remote show origin
```
