{
  "hash": "876292e71fec497e660342b016476327",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ciencia de Datos para Economistas\"\nsubtitle: \"Clase 17- Trabajando con Fechas y Textos\"\ndate: \"December 9, 2024\"\nauthor: \"MSc. José M. Avendaño\"\n# output:\n#   html_document:\n#     toc: yes\nfilters:\n  - webr\nengine: knitr\nformat: revealjs\n# execute: \n#   echo: true\n  # eval: false\n---\n\n\n\n## Objetivo:\n\nConocer las estructuras y formas de manipular las fechas y horas, así como las distintas representaciones de este tipo de datos en R\n\n## **Conceptos Básicos de Fechas en R**\n\nEn R, las fechas se manejan principalmente mediante dos tipos: **`Date`** y **`POSIXct`**.\n\n-   **Date** : Almacena solo la fecha (año, mes, día).\n\n-   **POSIXct** : Almacena tanto la fecha como la hora.\n\nAmbos tipos de objetos están representados internamente como el número de días (para **`Date`**) o segundos (para **`POSIXct`**) desde el 1 de enero de 1970.\n\n## Ejemplos Fechas\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Crear una fecha con POSIXct\nfecha1 <- as.POSIXct(\"2012-06-28\")\nprint(fecha1)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nfecha2 <- Sys.Date()\nprint(fecha2)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nfecha_hora_actual <- Sys.time()\nprint(fecha_hora_actual)\n```\n:::\n\n\n\n## Ejemplos Fechas/2\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nprint(as.Date(fecha_hora_actual))\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\noptions(\"digits.secs\"=6) \nSys.time()\n```\n:::\n\n\n\n## **Trabajando con Fechas en Base R**\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Usando la función as.Date()\nfecha_character <-\"2023-10-05\"\nprint(class(fecha_character))\nfecha_ejemplo<- as.Date(fecha_character)\nprint(fecha_ejemplo)\nprint(class(fecha_ejemplo))\n\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Usando Sys.Date() para obtener la fecha actual\nfecha_actual <- Sys.Date()\nprint(fecha_actual)\n```\n:::\n\n\n\n## Extraer Datos de la Fechas\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nweekdays(fecha_actual)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nmonths(fecha_actual)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nquarters(fecha_actual)\n```\n:::\n\n\n\n## **Operaciones con Fechas:**\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Sumar días a una fecha\nfecha_futura <- fecha_ejemplo + 7\nprint(fecha_futura)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Restar días a una fecha\nfecha_pasada <- fecha_ejemplo - 14\nprint(fecha_pasada)\n```\n:::\n\n\n\n## Formato **POSIXlt**\n\nEstá optimizado para el almacenamiento y los cálculos. Permite extraer rápidamente alguna parte de los datos (por ejemplo, los meses). La clase POSIXlt almacena la información de fecha y hora en un formato que estamos acostumbrados a ver (por ejemplo, segundo, min, hora, día del mes, mes, año, día numérico del año, etc).\n\n## Formato **POSIXlt - Ejemplos**\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nFechaHora_lt<- as.POSIXlt(\"2024-10-19 10:15\")  \nstr(FechaHora_lt)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nFechaHora_lt\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nunclass(FechaHora_lt)\n```\n:::\n\n\n\n## Diferencias **POSIXct** \\~ **POSIXlt**\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nfecha_ct <- as.POSIXct(1268736919, origin=\"1970-01-01\", tz=\"GMT\")\nfecha_lt <- as.POSIXlt(1268736919, origin=\"1970-01-01\", tz=\"GMT\")\nfecha_ct; fecha_lt\n\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nunclass(fecha_ct)\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nfecha_lt$min\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nunclass(fecha_lt)\n```\n:::\n\n\n\n## Formatear Fechas\n\n`strftime` : Funciones para convertir entre representaciones de caracteres y objetos de las clases «POSIXlt» y «POSIXct» que representan fechas y horas de calendario. Consultar documentación `?strftime`\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Usando strftime() para formatear fechas\nfecha_formateada <- strftime(fecha_ct, \"%Y-%m-%d\")\nprint(fecha_formateada)\nprint(strftime(Sys.time(), \"%Y-%m-%d Time %H:%M\"))\n```\n:::\n\n\n\n## Asignar `Time Zone`\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Conocer la timezona definida en nuestro computador\nSys.timezone()\n```\n:::\n\n::: {.cell}\n\n```{.webr .cell-code}\nas.POSIXct(fecha_lt,\n           format = \"%Y-%m-%d T %H:%M\",\n           tz = \"Europe/Berlin\")\n```\n:::\n\n\n\n## Lecturas Recomendadas\n\n-   <http://ianmadd.github.io/pages/POSIXct_and_POSIXlt.html>\n\n-   <https://www.stat.berkeley.edu/~s133/dates.html>\n\n-   <https://clock.r-lib.org/reference/posixt-formatting.html>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}