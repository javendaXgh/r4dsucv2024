request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_headers(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()
request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m')|>
req_perform()
request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body_json(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m')|>
req_perform()
request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()
llm_resultado <- request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()
request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
llm_resultado <- request('http://localhost:11434/api/generate')|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
llm_resultado$response
fromJSON(llm_resultado$response)
# definir el prompt
prompt <- 'Eres un experto en extraer en formato json el valor del dolar {dolar: valor} del texto delimitado por triple asterisco. Texto: ***'
post_texto <- '***.  Recuerda solo extraer el valor y no añadir información adicional. '
dato_texto_prompt <- paste(prompt,
dato_texto,
post_texto)
url_ollama <- 'http://localhost:11434'
endpoint <- paste(url_ollama, '/api/generate')
llm_resultado <- request(url_ollama)|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
# modificar url por el de la ip donde se aloja ollama en red local
url_ollama <- 'http://localhost:11434'
endpoint <- paste(url_ollama, '/api/generate')
fromJSON(llm_resultado$response)
llm_resultado <- request(endpoint)|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
endpoint <- paste0(url_ollama, '/api/generate')
llm_resultado <- request(endpoint)|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
endpoint <- paste0(url_ollama, '/api/generate')
fromJSON(llm_resultado$response)
fromJSON(llm_resultado$response)|>
as_tibble()
dato_texto <- read_html('https://economia.ucab.edu.ve/perspectivas-economicas-de-2025-discutieron-especialistas-en-la-ucab/')|>
html_nodes('p')|>
html_text()|>
paste(collapse = '. ')%>%
str_squish()
dato_texto_ucab <- read_html('https://economia.ucab.edu.ve/perspectivas-economicas-de-2025-discutieron-especialistas-en-la-ucab/')|>
html_nodes('p')|>
html_text()|>
paste(collapse = '. ')%>%
str_squish()
dato_texto_ucab <- read_html('https://economia.ucab.edu.ve/perspectivas-economicas-de-2025-discutieron-especialistas-en-la-ucab/')|>
html_nodes('p')|>
html_text()|>
paste(collapse = '. ')%>%
str_squish()
# inspección texto descargado
substr(dato_texto_ucab, 200, 400)
api_key <- 'AIzaSyCBNIN7OwKFR47S-tWqzlR4r0ihSt8RfDQ'
# modificar url por el de la ip donde se aloja ollama en red local
url_ollama <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key='
# modificar url por el de la ip donde se aloja ollama en red local
gai_studio <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key='
api_key <- 'AIzaSyCBNIN7OwKFR47S-tWqzlR4r0ihSt8RfDQ'
# modificar url por el de la ip donde se aloja ollama en red local
gooai_studio <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key='
api_key <- 'AIzaSyCBNIN7OwKFR47S-tWqzlR4r0ihSt8RfDQ'
endpoint <- paste0(gooai_studio, api_key)
endpoint_google <- paste0(gooai_studio, api_key)
# modificar url por el de la ip donde se aloja ollama en red local
gooai_studio <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent'
# modificar url por el de la ip donde se aloja ollama en red local
gooai_studio_url <- 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent'
dato_texto_prompt
dato_texto_prompt_gooaistudio <- paste(prompt,
dato_texto_ucab,
post_texto)
dato_texto_prompt_gooaistudio
api_key
llm_resultado_google <- request(gooai_studio_url) %>%
req_headers("Content-Type" = "application/json") %>%
req_body_json(
list(
contents = list(
list(
parts = list(
list(text = dato_texto_prompt_gooaistudio)
)
)
)
)
) %>%
req_url_query(key = api_key) %>%
req_method("POST")
fromJSON(llm_resultado_google$response)|>
as_tibble()
llm_resultado_google$response
dato_texto_prompt_gooaistudio
llm_resultado_google <- request(gooai_studio_url) %>%
req_headers("Content-Type" = "application/json") %>%
req_body_json(
list(
contents = list(
list(
parts = list(
list(text = dato_texto_prompt_gooaistudio)
)
)
)
)
) %>%
req_url_query(key = api_key) %>%
req_method("POST")|>
req_perform()|>
resp_body_json()
fromJSON(llm_resultado_google$response)|>
as_tibble()
llm_resultado_google$response
llm_resultado_google <- request(gooai_studio_url) %>%
req_headers("Content-Type" = "application/json") %>%
req_body_json(
list(
contents = list(
list(
parts = list(
list(text = "Explain how AI works")
)
)
)
)
) %>%
req_url_query(key = api_key) %>%
req_method("POST")|>
req_perform()
llm_resultado_google
resp_body_string(llm_resultado_google)
dato_texto_prompt_gooaistudio
llm_resultado_google <- request(gooai_studio_url) %>%
req_headers("Content-Type" = "application/json") %>%
req_body_json(
list(
contents = list(
list(
parts = list(
list(text = dato_texto_prompt_gooaistudio)
)
)
)
)
) %>%
req_url_query(key = api_key) %>%
req_method("POST")|>
req_perform()
resp_body_string(llm_resultado_google)
resp_body_string(llm_resultado_google)%>%
fromJSON()
resp_body_json(llm_resultado_google)
llm_resultado_google$body
llm_resultado_google$body%>%
rawT
llm_resultado_google$body%>%
rawToChar()
dato_texto_prompt_gooaistudio
llm_resultado_google$body%>%
rawToChar()
llm_resultado_google$body%>%
rawToChar()%>%
fromJSON()
# definir el prompt
prompt <- 'Eres un experto en análisis de noticias económicas. Vas a extraer en formato json las ideas principales expuestas en el texto {idea_principal_nombre: descripcion} del texto delimitado por triple asterisco. Texto: ***'
post_texto <- '***.  Recuerda solo extraer el valor y no añadir información adicional. '
dato_texto_prompt_gooaistudio <- paste(prompt,
dato_texto_ucab,
post_texto)
llm_resultado_google <- request(endpoint)|>
req_method("POST")|>
req_body_json(list(  model='llama3.2:1b',
prompt = dato_texto_prompt,
raw=FALSE,
format = "json",
options=list(
temperature= 0.1),
stream = FALSE,
keep_alive='3m'))|>
req_perform()|>
resp_body_json()
llm_resultado_google <- request(gooai_studio_url) %>%
req_headers("Content-Type" = "application/json") %>%
req_body_json(
list(
contents = list(
list(
parts = list(
list(text = dato_texto_prompt_gooaistudio)
)
)
)
)
) %>%
req_url_query(key = api_key) %>%
req_method("POST")|>
req_perform()
llm_resultado_google$body%>%
rawToChar()%>%
fromJSON()
llm_resultado_google$body$candidates%>%
rawToChar()%>%
fromJSON()
llm_resultado_google$body %>%
rawToChar()%>%
fromJSON()%>%
.$candidates
llm_resultado_google$body %>%
rawToChar()%>%
fromJSON()%>%
.$candidates%>%
fromJSON()
datos_goo_respuesta <- llm_resultado_google$body %>%
rawToChar()%>%
fromJSON()%>%
.$candidates
datos_goo_respuesta <- llm_resultado_google$body %>%
rawToChar()%>%
fromJSON()%>%
.$candidates
datos_goo_respuesta
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()|>
.$candidates |>
.$content|>
fromJSON()
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()|>
.$candidates |>
.$content
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()|>
.$candidates
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()%>%
.$candidates |>
.$content
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()%>%
.$candidates
datos_goo_respuesta
datos_goo_respuesta <- llm_resultado_google$body |>
rawToChar() |>
fromJSON()%>%
.$candidates %>%
.$content
datos_goo_respuesta
datos_goo_respuesta%>%
fromJSON()
datos_goo_respuesta$parts
datos_goo_respuesta$parts%>%
fromJSON()
datos_goo_respuesta$parts
datos_goo_respuesta$parts%>%
as_data_frame()
datos_goo_respuesta$parts
datos_goo_respuesta$parts%>%
str_remove('```json\n|\n```\n')
datos_goo_respuesta$parts%>%
str_remove(.,'```json\n|\n```\n')
datos_goo_respuesta$parts%>%
str_remove(.,'```json\\n|\\n```\\n')
datos_goo_respuesta$parts%>%
str_squish()
datos_goo_respuesta$parts%>%
str_squish()
datos_goo_respuesta$parts%>%
str_squish(.)
datos_goo_respuesta$parts
datos_goo_respuesta$parts%>%
.[[1]]
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove(.,'```json\\n|\\n```\\n')
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove(.,'```json |```')
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove(.,'```json | ```')
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove_all(.,'```json | ```')
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove_all(.,'```json | ```')%>%
fromJSON()
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove_all(.,'```json | ```')%>%
fromJSON()%>%
as_data_frame()
datos_goo_respuesta$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove_all(.,'```json | ```')%>%
fromJSON()
llm_resultado_google$body |>
rawToChar() |>
fromJSON()%>%
.$candidates %>%
.$content%>%
.$parts%>%
.[[1]]%>%
str_squish(.)%>%
str_remove_all(.,'```json | ```')%>%
fromJSON()
saveRDS(datos_goo_respuesta,'clases/data_in/datos_goo_respuesta.rds')
library(pdfetch)
library(xts)
valor_apple <- pdfetch_YAHOO(c("AAPL"))
valor_apple <- valor_apple%>%
as_data_frame()%>%
mutate(accion= 'Apple',
codigo= 'AAPL')%>%
bind_cols( fecha= index(valor_apple))
library(tidyverse)
valor_apple <- pdfetch_YAHOO(c("AAPL"))
valor_apple <- valor_apple%>%
as_data_frame()%>%
mutate(accion= 'Apple',
codigo= 'AAPL')%>%
bind_cols( fecha= index(valor_apple))
names(valor_apple) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
valor_apple <- valor_apple%>%
as_tibble()%>%
mutate(accion= 'Apple',
codigo= 'AAPL')%>%
bind_cols( fecha= index(valor_apple))
names(valor_apple) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
library(tidyverse)
valor_apple <- pdfetch_YAHOO(c("AAPL"))
valor_apple <- valor_apple%>%
as_data_frame()%>%
mutate(accion= 'Apple',
codigo= 'AAPL')%>%
bind_cols( fecha= index(valor_apple))
names(valor_apple) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
# descarga valores en formato zoo
valor_bitcoin <- pdfetch_YAHOO('BTC-USD')
# procesamiento de datos descargados
valor_bitcoin <- valor_bitcoin%>%
as_data_frame()%>%
mutate(accion= 'Bitcoin',
codigo= 'BTC-USD')%>%
bind_cols( fecha= index(valor_bitcoin))
names(valor_bitcoin) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
# descarga valores en formato zoo
valor_nvidia <- pdfetch_YAHOO('NVDA')
# procesamiento de datos descargados
valor_nvidia <- valor_nvidia%>%
as_data_frame()%>%
mutate(accion= 'Nvidia',
codigo= 'NVDA')%>%
bind_cols( fecha= index(valor_nvidia))
names(valor_nvidia) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
# descarga valores en formato zoo
valor_google <- pdfetch_YAHOO('GOOG')
# procesamiento de datos descargados
valor_google <- valor_google%>%
as_data_frame()%>%
mutate(accion= 'Google',
codigo= 'GOOG')%>%
bind_cols( fecha= index(valor_google))
names(valor_google) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
# descarga valores en formato zoo
valor_oracle <- pdfetch_YAHOO('ORCL')
# procesamiento de datos descargados
valor_oracle <- valor_oracle%>%
as_data_frame()%>%
mutate(accion= 'Oracle',
codigo= 'ORCL')%>%
bind_cols( fecha= index(valor_oracle))
names(valor_oracle) <- c('open','high','low',
'close','adjclose', 'volume',
'accion','codigo','fecha')
# unificar en una data frame valores de las acciones descargados
valores_acciones <- bind_rows(valor_apple,
valor_bitcoin,
valor_nvidia,
valor_google,
valor_oracle)%>%
select(9,1:7)%>%
pivot_longer(cols = c('open','high','low',
'close','adjclose'),
names_to = "tipo_valor",
values_to = "valor")
valores_acciones
