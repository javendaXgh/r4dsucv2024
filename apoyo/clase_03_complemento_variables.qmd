---
title: "Clase 03: complemento- nombres variables"
---

En esta clase veremos algunas recomendaciones sobre cómo deben nombrarse las variables en el lenguaje de programación R. Recuerde que el nombre de las variables es fundamental para mantener un código claro y comprensible.

```{r}
# Algún día haremos justicia los que tenemos la ñ en nuestro nombre
prof_avendaño <- 'se ejecutará pero no es recomendable'
```

Los nombres de las variables **no** deben contener acentos, diéresis ni caracteres especiales. Aunque es posible utilizar algunos caracteres como la "ñ", no es recomendable.

## Buenas prácticas para nombrar variables

Es importante que el nombre de la variable describa el valor que está guardando. Por ejemplo, no use nombres ambiguos como:

```{r}
princesa <- 10000

```

En lugar de eso, use nombres descriptivos como:

```{r}
meta_ventas_enero <- 10000


```

Esto le ayudará a entender el propósito de la variable más adelante en el código, especialmente cuando tiene múltiples variables en su programa.

## Declaración de variables

Después de elegir el nombre de la variable, es necesario usar el **operador de asignación**. En R, esto se hace con `<-`. También puede usar atajos de teclado como `Alt + -` en Windows para escribir el operador más rápido.

```{r}
variable_texto <- "contiene un texto"

```

Tenga en cuenta que los textos deben ir entre comillas simples (`'`) o dobles (`"`).

Si el valor que desea asignar es numérico, no use comillas:

```{r}
variable_numero <- 1000

```

Compare este ejemplo con una asignación incorrecta:

```{r}
variable_numero_2 <- '1000'
variable_numero + variable_numero  # Correcto
# variable_numero + variable_numero_2  # Genera error
```

## Ejecutar código en R

Al declarar una variable y ejecutar la línea, R creará una variable en el entorno. Puede ver el nuevo objeto creado en la ventana de "Environment".

```{r}
meta_ventas_enero <- 1000
```

## Ejemplos prácticos

Ejecute los siguientes ejemplos y asegúrese de que las variables aparezcan en el "Environment".

```{r}
var_nombre <- 'primera asignacion'
```

Recuerde siempre seguir las mejores prácticas de nombramiento para facilitar la lectura y el mantenimiento de su código.

```{r}

```

## Reglas para la creación de variables

### Estilo y convención

-   **Minúsculas:** Las variables deben escribirse en minúsculas como una recomendación de estilo. Aunque no es una limitación del lenguaje, es una buena práctica:

    ```{r}
    primeravariable <- 'iniciamos un script'
    ```

-   **Rayita abajo para juntar palabras:** Puede usar el guion bajo `_` para juntar dos o más palabras en el nombre de una variable:

```{r}
variable_creada <- 'este texto es el contenido de la variable'
```

### Restricciones

-   **No espacios en los nombres:** Las variables no pueden contener espacios en su nombre. El siguiente ejemplo no es válido y dará error:

```{r}
# variable con espacio <- 'esta línea no se podrá ejecutar'

```

-   **No comenzar con números:** Las variables no pueden comenzar con un número. El siguiente ejemplo también genera un error:

```{r}
# 1variable <- 'tampoco se ejecutará este código'
```

Al ejecutar la línea anterior, se obtendrá un mensaje de error en la Consola.

-   **Solo letras o puntos al inicio:** Los nombres de las variables solo pueden empezar con una letra o un punto. Si se utiliza un punto al inicio, no debe ser seguido de un número:

```{r}
variable_tercera <- 'seguimos avanzando'
.variable_tercera <- 'la variable_tercera es distinta a la .variable_tercera, son dos nombres distintos'

```

El siguiente ejemplo es incorrecto porque el punto no puede estar seguido de un número:

```{r}
# .5variable <- 'INCORRECTO'

```

### Caracteres especiales no permitidos

Además del punto `.` y la rayita abajo `_`, no se permite el uso de otros caracteres especiales en los nombres de las variables.

Aquí tienes un listado de los caracteres especiales que no puedes usar:

```{r}
listado_caracteres_especiales <- c("~", "`", "!", "@", "#", "$", "%", "^", "&", 
                                   "*", "(", ")", "-", "_", "+", "=", "{", "}", 
                                   "[", "]", "|", "\\", "/", ":", ";", "\"", 
                                   "'", "<", ">", ".", "?")
listado_caracteres_especiales
```

El siguiente ejemplo es incorrecto debido al uso de un carácter especial en el nombre de la variable:

```{r}
# variable.inasig@nabl_e <- 'INCORRECTO'

```
