{
  "hash": "81ef793b61d180b4e68839277acb611e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ciencia de Datos para Economistas\"\nsubtitle: \"Clase 09- Rutas (paths)\"\ndate: \"Noviembre 13, 2024\"\nauthor: \"MSc. José M. Avendaño\"\n# output:\n#   html_document:\n#     toc: yes\nformat: \n  revealjs\nexecute:\n  echo: true\n  eval: false\n---\n\n\n\n## Objetivo:\n\nConocer las \"paths\" o rutas para ubicar directorios o archivos con los cuales se trabajará. Se asume que existe un archivo que se llama \"archivo.txt\" que está ubicado dentro de la carpeta \"Documentos\". La carpeta \"Documentos\" en Windows se puede llamar \"Mis Documentos\".\n\n## 1. Rutas Absolutas\n\nUna ruta absoluta es la ruta completa desde la raíz del sistema hasta el archivo o directorio específico.\n\n-   Windows : Comienza con una letra seguida de dos puntos (por ejemplo, C:) y luego las carpetas separadas por barras invertidas ().\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejemplo en Windows\npath_absoluto <- \"C:\\\\Users\\\\NombreUsuario\\\\Documentos\\\\archivo.txt\"\n```\n:::\n\n\n\n## 1. Rutas Absolutas/cont.\n\n-   macOS/Linux : Comienza desde la raíz del sistema (por ejemplo, /) y luego las carpetas separadas por barras (/).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejemplo en macOS/Linux\npath_absoluto <- \"/Users/NombreUsuario/Documentos/archivo.txt\"\n```\n:::\n\n\n\n## 2. Rutas Relativas\n\nUna ruta relativa es la ruta desde el directorio de trabajo actual hasta el archivo o directorio específico.\n\n-   Windows : Las rutas relativas también usan barras invertidas (\\\\\\\\).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejemplo en Windows\npath_relativo <- \"Documentos\\\\archivo.txt\"\n```\n:::\n\n\n\n-   macOS/Linux : Las rutas relativas usan barras (/).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejemplo en macOS/Linux\npath_relativo <- \"Documentos/archivo.txt\"\n```\n:::\n\n\n\n## 3. Directorio de Trabajo\n\nEl directorio de trabajo es el lugar donde R busca archivos por defecto.\n\nVerificar el Directorio de Trabajo :\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n\n\n## 3. Directorio de Trabajo/ cont.\n\n-   Cambiar el Directorio de Trabajo :\n\n    -   Usando la interfaz gráfica de RStudio: `⚙️ -Set As Working Directory...`. Ver sección inferior derecha:\n\n        ![](images/setwd.png){width=\"200\"}\n\n## 3. Directorio de Trabajo/ cont.\n\n-   Usando código para windows:\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Para Windows\n    setwd(\"C:\\\\Users\\\\NombreUsuario\\\\Documentos\")\n    ```\n    :::\n\n\n\n-   Usando código para MacOS\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Para macOS/Linux\n    setwd(\"/Users/NombreUsuario/Documentos\")\n    ```\n    :::\n\n\n\n## 4. Leer Archivos\n\n-   Lectura de un archivo en Windows :\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Ruta relativa\n    datos <- read.csv(\"archivo.csv\")  \n    \n    # Ruta absoluta en Windows\n    datos <- read.csv(\"C:\\\\Users\\\\NombreUsuario\\\\Documentos\\\\archivo.csv\")  \n    ```\n    :::\n\n\n\n-   Lectura de un archivo en MacOS:\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Ruta relativa\n    datos <- read.csv(\"archivo.csv\")  \n    # Ruta absoluta en macOS/Linux\n    datos <- read.csv(\"/Users/NombreUsuario/Documentos/archivo.csv\") \n    ```\n    :::\n\n\n\n## 5 Escribir Archivos\n\n-   Escritura de un archivo en Windows:\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Ruta relativa\n    write.csv(datos, \"nuevo_archivo.csv\")  \n    # Ruta absoluta en Windows\n    write.csv(datos, \"C:\\\\Users\\\\NombreUsuario\\\\Documentos\\\\nuevo_archivo.csv\")  \n    ```\n    :::\n\n\n\n-   Escritura de un archivo en MacOS\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Ruta relativa\n    write.csv(datos, \"nuevo_archivo.csv\")  \n    # Ruta absoluta en macOS/Linux\n    write.csv(datos, \"/Users/NombreUsuario/Documentos/nuevo_archivo.csv\")  \n    ```\n    :::\n\n\n\n## 6. Consideraciones para Usuarios de Diferentes Sistemas Operativos\n\n-   Función `file.path` : Esta función ayuda a construir rutas que sean compatibles con el sistema operativo que está usando.\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    ruta_archivo <- file.path(\"Directorio1\", \"Subdirectorio2\", \"archivo.txt\")\n    ruta_archivo\n    ```\n    :::\n\n\n\n## Resumen\n\n-   **Rutas Absolutas:** Comienzan desde la raíz del sistema y usan barras invertidas en Windows () o barras (/) en macOS/Linux.\n\n-   **Rutas Relativas:** Son rutas desde el directorio de trabajo actual, usando barras invertidas en Windows () o barras (/) en macOS/Linux.\n\n## Resumen/cont.\n\n-   **Directorio de Trabajo:** Se puede verificar y cambiar usando getwd() y setwd().\n\n-   **Leer/Escribir Archivos:** Usar rutas relativas o absolutas según sea necesario, considerando el sistema operativo.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}